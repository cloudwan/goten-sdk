// Code generated by protoc-gen-goten-go
// File: goten/meta-service/proto/v1/deployment_custom.proto
// DO NOT EDIT!!!

package deployment_client

import (
	"fmt"
	"reflect"
	"sync"

	"google.golang.org/protobuf/encoding/protojson"
	"google.golang.org/protobuf/proto"
	preflect "google.golang.org/protobuf/reflect/protoreflect"
	"google.golang.org/protobuf/runtime/protoimpl"
)

// proto imports
import (
	deployment "github.com/cloudwan/goten-sdk/meta-service/resources/v1/deployment"
	service "github.com/cloudwan/goten-sdk/meta-service/resources/v1/service"
	structpb "google.golang.org/protobuf/types/known/structpb"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = fmt.Errorf
	_ = reflect.Method{}
	_ = sync.Once{}

	_ = protojson.MarshalOptions{}
	_ = proto.MarshalOptions{}
	_ = preflect.Value{}
	_ = protoimpl.DescBuilder{}
)

// make sure we're using proto imports
var (
	_ = &structpb.Struct{}
	_ = &deployment.Deployment{}
	_ = &service.Service{}
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for method [BeginUpgrade][goten.meta.v1.BeginUpgrade]
type BeginUpgradeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	//  name of goten.meta.v1.Deployment
	Name *deployment.Name `protobuf:"bytes,1,opt,customtype=Name,name=name,proto3" json:"name,omitempty" firestore:"name"`
}

func (m *BeginUpgradeRequest) Reset() {
	*m = BeginUpgradeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &goten_meta_service_proto_v1_deployment_custom_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *BeginUpgradeRequest) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*BeginUpgradeRequest) ProtoMessage() {}

func (m *BeginUpgradeRequest) ProtoReflect() preflect.Message {
	mi := &goten_meta_service_proto_v1_deployment_custom_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*BeginUpgradeRequest) GotenMessage() {}

// Deprecated, Use BeginUpgradeRequest.ProtoReflect.Descriptor instead.
func (*BeginUpgradeRequest) Descriptor() ([]byte, []int) {
	return goten_meta_service_proto_v1_deployment_custom_proto_rawDescGZIP(), []int{0}
}

func (m *BeginUpgradeRequest) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *BeginUpgradeRequest) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *BeginUpgradeRequest) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *BeginUpgradeRequest) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *BeginUpgradeRequest) GetName() *deployment.Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *BeginUpgradeRequest) SetName(fv *deployment.Name) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Name", "BeginUpgradeRequest"))
	}
	m.Name = fv
}

// Request message for method
// [SetAvailableUpgrade][goten.meta.v1.SetAvailableUpgrade]
type SetAvailableUpgradeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	//  name of goten.meta.v1.Deployment
	Name                *deployment.Name `protobuf:"bytes,1,opt,customtype=Name,name=name,proto3" json:"name,omitempty" firestore:"name"`
	TargetApiVersion    string           `protobuf:"bytes,2,opt,name=target_api_version,json=targetApiVersion,proto3" json:"target_api_version,omitempty" firestore:"targetApiVersion"`
	TotalShardsCount    int64            `protobuf:"varint,3,opt,name=total_shards_count,json=totalShardsCount,proto3" json:"total_shards_count,omitempty" firestore:"totalShardsCount"`
	TargetDbDataVersion string           `protobuf:"bytes,4,opt,name=target_db_data_version,json=targetDbDataVersion,proto3" json:"target_db_data_version,omitempty" firestore:"targetDbDataVersion"`
	TargetDbLocationTag string           `protobuf:"bytes,5,opt,name=target_db_location_tag,json=targetDbLocationTag,proto3" json:"target_db_location_tag,omitempty" firestore:"targetDbLocationTag"`
}

func (m *SetAvailableUpgradeRequest) Reset() {
	*m = SetAvailableUpgradeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &goten_meta_service_proto_v1_deployment_custom_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *SetAvailableUpgradeRequest) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*SetAvailableUpgradeRequest) ProtoMessage() {}

func (m *SetAvailableUpgradeRequest) ProtoReflect() preflect.Message {
	mi := &goten_meta_service_proto_v1_deployment_custom_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*SetAvailableUpgradeRequest) GotenMessage() {}

// Deprecated, Use SetAvailableUpgradeRequest.ProtoReflect.Descriptor instead.
func (*SetAvailableUpgradeRequest) Descriptor() ([]byte, []int) {
	return goten_meta_service_proto_v1_deployment_custom_proto_rawDescGZIP(), []int{1}
}

func (m *SetAvailableUpgradeRequest) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *SetAvailableUpgradeRequest) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *SetAvailableUpgradeRequest) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *SetAvailableUpgradeRequest) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *SetAvailableUpgradeRequest) GetName() *deployment.Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *SetAvailableUpgradeRequest) GetTargetApiVersion() string {
	if m != nil {
		return m.TargetApiVersion
	}
	return ""
}

func (m *SetAvailableUpgradeRequest) GetTotalShardsCount() int64 {
	if m != nil {
		return m.TotalShardsCount
	}
	return int64(0)
}

func (m *SetAvailableUpgradeRequest) GetTargetDbDataVersion() string {
	if m != nil {
		return m.TargetDbDataVersion
	}
	return ""
}

func (m *SetAvailableUpgradeRequest) GetTargetDbLocationTag() string {
	if m != nil {
		return m.TargetDbLocationTag
	}
	return ""
}

func (m *SetAvailableUpgradeRequest) SetName(fv *deployment.Name) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Name", "SetAvailableUpgradeRequest"))
	}
	m.Name = fv
}

func (m *SetAvailableUpgradeRequest) SetTargetApiVersion(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "TargetApiVersion", "SetAvailableUpgradeRequest"))
	}
	m.TargetApiVersion = fv
}

func (m *SetAvailableUpgradeRequest) SetTotalShardsCount(fv int64) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "TotalShardsCount", "SetAvailableUpgradeRequest"))
	}
	m.TotalShardsCount = fv
}

func (m *SetAvailableUpgradeRequest) SetTargetDbDataVersion(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "TargetDbDataVersion", "SetAvailableUpgradeRequest"))
	}
	m.TargetDbDataVersion = fv
}

func (m *SetAvailableUpgradeRequest) SetTargetDbLocationTag(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "TargetDbLocationTag", "SetAvailableUpgradeRequest"))
	}
	m.TargetDbLocationTag = fv
}

// Request message for method
// [NotifyShardsUpgradeReadiness][goten.meta.v1.NotifyShardsUpgradeReadiness]
type NotifyShardsUpgradeReadinessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	//  name of goten.meta.v1.Deployment
	Name             *deployment.Name `protobuf:"bytes,1,opt,customtype=Name,name=name,proto3" json:"name,omitempty" firestore:"name"`
	ShardsFrom       int64            `protobuf:"varint,2,opt,name=shards_from,json=shardsFrom,proto3" json:"shards_from,omitempty" firestore:"shardsFrom"`
	ShardsTo         int64            `protobuf:"varint,3,opt,name=shards_to,json=shardsTo,proto3" json:"shards_to,omitempty" firestore:"shardsTo"`
	Ready            bool             `protobuf:"varint,4,opt,name=ready,proto3" json:"ready,omitempty" firestore:"ready"`
	TotalShardsCount int64            `protobuf:"varint,5,opt,name=total_shards_count,json=totalShardsCount,proto3" json:"total_shards_count,omitempty" firestore:"totalShardsCount"`
}

func (m *NotifyShardsUpgradeReadinessRequest) Reset() {
	*m = NotifyShardsUpgradeReadinessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &goten_meta_service_proto_v1_deployment_custom_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *NotifyShardsUpgradeReadinessRequest) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*NotifyShardsUpgradeReadinessRequest) ProtoMessage() {}

func (m *NotifyShardsUpgradeReadinessRequest) ProtoReflect() preflect.Message {
	mi := &goten_meta_service_proto_v1_deployment_custom_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*NotifyShardsUpgradeReadinessRequest) GotenMessage() {}

// Deprecated, Use NotifyShardsUpgradeReadinessRequest.ProtoReflect.Descriptor instead.
func (*NotifyShardsUpgradeReadinessRequest) Descriptor() ([]byte, []int) {
	return goten_meta_service_proto_v1_deployment_custom_proto_rawDescGZIP(), []int{2}
}

func (m *NotifyShardsUpgradeReadinessRequest) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *NotifyShardsUpgradeReadinessRequest) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *NotifyShardsUpgradeReadinessRequest) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *NotifyShardsUpgradeReadinessRequest) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *NotifyShardsUpgradeReadinessRequest) GetName() *deployment.Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *NotifyShardsUpgradeReadinessRequest) GetShardsFrom() int64 {
	if m != nil {
		return m.ShardsFrom
	}
	return int64(0)
}

func (m *NotifyShardsUpgradeReadinessRequest) GetShardsTo() int64 {
	if m != nil {
		return m.ShardsTo
	}
	return int64(0)
}

func (m *NotifyShardsUpgradeReadinessRequest) GetReady() bool {
	if m != nil {
		return m.Ready
	}
	return false
}

func (m *NotifyShardsUpgradeReadinessRequest) GetTotalShardsCount() int64 {
	if m != nil {
		return m.TotalShardsCount
	}
	return int64(0)
}

func (m *NotifyShardsUpgradeReadinessRequest) SetName(fv *deployment.Name) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Name", "NotifyShardsUpgradeReadinessRequest"))
	}
	m.Name = fv
}

func (m *NotifyShardsUpgradeReadinessRequest) SetShardsFrom(fv int64) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ShardsFrom", "NotifyShardsUpgradeReadinessRequest"))
	}
	m.ShardsFrom = fv
}

func (m *NotifyShardsUpgradeReadinessRequest) SetShardsTo(fv int64) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ShardsTo", "NotifyShardsUpgradeReadinessRequest"))
	}
	m.ShardsTo = fv
}

func (m *NotifyShardsUpgradeReadinessRequest) SetReady(fv bool) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Ready", "NotifyShardsUpgradeReadinessRequest"))
	}
	m.Ready = fv
}

func (m *NotifyShardsUpgradeReadinessRequest) SetTotalShardsCount(fv int64) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "TotalShardsCount", "NotifyShardsUpgradeReadinessRequest"))
	}
	m.TotalShardsCount = fv
}

// Request message for method
// [GetOrRegisterDataUpdateTask][goten.meta.v1.GetOrRegisterDataUpdateTask]
type GetOrRegisterDataUpdateTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	//  name of goten.meta.v1.Deployment
	Name *deployment.Name `protobuf:"bytes,1,opt,customtype=Name,name=name,proto3" json:"name,omitempty" firestore:"name"`
	// Data task tag
	Tag string `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty" firestore:"tag"`
	// Number of shards
	ShardsCount int64 `protobuf:"varint,3,opt,name=shards_count,json=shardsCount,proto3" json:"shards_count,omitempty" firestore:"shardsCount"`
	// Db data target version
	DbDataTargetVersion string `protobuf:"bytes,4,opt,name=db_data_target_version,json=dbDataTargetVersion,proto3" json:"db_data_target_version,omitempty" firestore:"dbDataTargetVersion"`
}

func (m *GetOrRegisterDataUpdateTaskRequest) Reset() {
	*m = GetOrRegisterDataUpdateTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &goten_meta_service_proto_v1_deployment_custom_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *GetOrRegisterDataUpdateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*GetOrRegisterDataUpdateTaskRequest) ProtoMessage() {}

func (m *GetOrRegisterDataUpdateTaskRequest) ProtoReflect() preflect.Message {
	mi := &goten_meta_service_proto_v1_deployment_custom_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*GetOrRegisterDataUpdateTaskRequest) GotenMessage() {}

// Deprecated, Use GetOrRegisterDataUpdateTaskRequest.ProtoReflect.Descriptor instead.
func (*GetOrRegisterDataUpdateTaskRequest) Descriptor() ([]byte, []int) {
	return goten_meta_service_proto_v1_deployment_custom_proto_rawDescGZIP(), []int{3}
}

func (m *GetOrRegisterDataUpdateTaskRequest) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *GetOrRegisterDataUpdateTaskRequest) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *GetOrRegisterDataUpdateTaskRequest) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *GetOrRegisterDataUpdateTaskRequest) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *GetOrRegisterDataUpdateTaskRequest) GetName() *deployment.Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *GetOrRegisterDataUpdateTaskRequest) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *GetOrRegisterDataUpdateTaskRequest) GetShardsCount() int64 {
	if m != nil {
		return m.ShardsCount
	}
	return int64(0)
}

func (m *GetOrRegisterDataUpdateTaskRequest) GetDbDataTargetVersion() string {
	if m != nil {
		return m.DbDataTargetVersion
	}
	return ""
}

func (m *GetOrRegisterDataUpdateTaskRequest) SetName(fv *deployment.Name) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Name", "GetOrRegisterDataUpdateTaskRequest"))
	}
	m.Name = fv
}

func (m *GetOrRegisterDataUpdateTaskRequest) SetTag(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Tag", "GetOrRegisterDataUpdateTaskRequest"))
	}
	m.Tag = fv
}

func (m *GetOrRegisterDataUpdateTaskRequest) SetShardsCount(fv int64) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ShardsCount", "GetOrRegisterDataUpdateTaskRequest"))
	}
	m.ShardsCount = fv
}

func (m *GetOrRegisterDataUpdateTaskRequest) SetDbDataTargetVersion(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "DbDataTargetVersion", "GetOrRegisterDataUpdateTaskRequest"))
	}
	m.DbDataTargetVersion = fv
}

// Response message for method
// [GetOrRegisterDataUpdateTask][goten.meta.v1.GetOrRegisterDataUpdateTask]
type GetOrRegisterDataUpdateTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	Status        *deployment.Deployment_DbUpdateTaskStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty" firestore:"status"`
}

func (m *GetOrRegisterDataUpdateTaskResponse) Reset() {
	*m = GetOrRegisterDataUpdateTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &goten_meta_service_proto_v1_deployment_custom_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *GetOrRegisterDataUpdateTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*GetOrRegisterDataUpdateTaskResponse) ProtoMessage() {}

func (m *GetOrRegisterDataUpdateTaskResponse) ProtoReflect() preflect.Message {
	mi := &goten_meta_service_proto_v1_deployment_custom_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*GetOrRegisterDataUpdateTaskResponse) GotenMessage() {}

// Deprecated, Use GetOrRegisterDataUpdateTaskResponse.ProtoReflect.Descriptor instead.
func (*GetOrRegisterDataUpdateTaskResponse) Descriptor() ([]byte, []int) {
	return goten_meta_service_proto_v1_deployment_custom_proto_rawDescGZIP(), []int{4}
}

func (m *GetOrRegisterDataUpdateTaskResponse) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *GetOrRegisterDataUpdateTaskResponse) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *GetOrRegisterDataUpdateTaskResponse) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *GetOrRegisterDataUpdateTaskResponse) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *GetOrRegisterDataUpdateTaskResponse) GetStatus() *deployment.Deployment_DbUpdateTaskStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetOrRegisterDataUpdateTaskResponse) SetStatus(fv *deployment.Deployment_DbUpdateTaskStatus) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Status", "GetOrRegisterDataUpdateTaskResponse"))
	}
	m.Status = fv
}

// Request message for method
// [UpdateDataTaskUpdate][goten.meta.v1.UpdateDataTaskUpdate]
type UpdateDataTaskUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	//  name of goten.meta.v1.Deployment
	Name *deployment.Name `protobuf:"bytes,1,opt,customtype=Name,name=name,proto3" json:"name,omitempty" firestore:"name"`
	// Data task tag
	Tag string `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty" firestore:"tag"`
	// Number of shards
	Shard int64 `protobuf:"varint,3,opt,name=shard,proto3" json:"shard,omitempty" firestore:"shard"`
	// Whether it is completed
	Done bool `protobuf:"varint,4,opt,name=done,proto3" json:"done,omitempty" firestore:"done"`
	// Information about progress
	ProgressStatus *structpb.Struct `protobuf:"bytes,5,opt,name=progress_status,json=progressStatus,proto3" json:"progress_status,omitempty" firestore:"progressStatus"`
	// Db data target version
	DbDataTargetVersion string `protobuf:"bytes,6,opt,name=db_data_target_version,json=dbDataTargetVersion,proto3" json:"db_data_target_version,omitempty" firestore:"dbDataTargetVersion"`
}

func (m *UpdateDataTaskUpdateRequest) Reset() {
	*m = UpdateDataTaskUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &goten_meta_service_proto_v1_deployment_custom_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *UpdateDataTaskUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*UpdateDataTaskUpdateRequest) ProtoMessage() {}

func (m *UpdateDataTaskUpdateRequest) ProtoReflect() preflect.Message {
	mi := &goten_meta_service_proto_v1_deployment_custom_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*UpdateDataTaskUpdateRequest) GotenMessage() {}

// Deprecated, Use UpdateDataTaskUpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateDataTaskUpdateRequest) Descriptor() ([]byte, []int) {
	return goten_meta_service_proto_v1_deployment_custom_proto_rawDescGZIP(), []int{5}
}

func (m *UpdateDataTaskUpdateRequest) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *UpdateDataTaskUpdateRequest) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *UpdateDataTaskUpdateRequest) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *UpdateDataTaskUpdateRequest) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *UpdateDataTaskUpdateRequest) GetName() *deployment.Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *UpdateDataTaskUpdateRequest) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *UpdateDataTaskUpdateRequest) GetShard() int64 {
	if m != nil {
		return m.Shard
	}
	return int64(0)
}

func (m *UpdateDataTaskUpdateRequest) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

func (m *UpdateDataTaskUpdateRequest) GetProgressStatus() *structpb.Struct {
	if m != nil {
		return m.ProgressStatus
	}
	return nil
}

func (m *UpdateDataTaskUpdateRequest) GetDbDataTargetVersion() string {
	if m != nil {
		return m.DbDataTargetVersion
	}
	return ""
}

func (m *UpdateDataTaskUpdateRequest) SetName(fv *deployment.Name) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Name", "UpdateDataTaskUpdateRequest"))
	}
	m.Name = fv
}

func (m *UpdateDataTaskUpdateRequest) SetTag(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Tag", "UpdateDataTaskUpdateRequest"))
	}
	m.Tag = fv
}

func (m *UpdateDataTaskUpdateRequest) SetShard(fv int64) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Shard", "UpdateDataTaskUpdateRequest"))
	}
	m.Shard = fv
}

func (m *UpdateDataTaskUpdateRequest) SetDone(fv bool) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Done", "UpdateDataTaskUpdateRequest"))
	}
	m.Done = fv
}

func (m *UpdateDataTaskUpdateRequest) SetProgressStatus(fv *structpb.Struct) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "ProgressStatus", "UpdateDataTaskUpdateRequest"))
	}
	m.ProgressStatus = fv
}

func (m *UpdateDataTaskUpdateRequest) SetDbDataTargetVersion(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "DbDataTargetVersion", "UpdateDataTaskUpdateRequest"))
	}
	m.DbDataTargetVersion = fv
}

var goten_meta_service_proto_v1_deployment_custom_proto preflect.FileDescriptor

var goten_meta_service_proto_v1_deployment_custom_proto_rawDesc = []byte{
	0x0a, 0x33, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x2e, 0x76, 0x31, 0x1a, 0x20, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x67, 0x6f, 0x74, 0x65,
	0x6e, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x33, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f,
	0x6d, 0x65, 0x74, 0x61, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4f, 0x0a,
	0x13, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x12, 0xb2, 0xda, 0x21, 0x0e, 0x0a, 0x0c, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x4a, 0x04, 0x08, 0x02,
	0x10, 0x03, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x22, 0xaa,
	0x02, 0x0a, 0x1a, 0x53, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x55,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0xb2, 0xda, 0x21,
	0x0e, 0x0a, 0x0c, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61,
	0x72, 0x64, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x53, 0x0a, 0x16, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x62, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x1e, 0xca, 0xc6, 0x27, 0x1a, 0x2a, 0x18, 0x52, 0x16, 0x42, 0x14, 0x28, 0x5e, 0x24,
	0x7c, 0x5e, 0x76, 0x5b, 0x30, 0x2d, 0x39, 0x2e, 0x5d, 0x7b, 0x31, 0x2c, 0x36, 0x34, 0x7d, 0x24,
	0x29, 0x52, 0x13, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x62, 0x44, 0x61, 0x74, 0x61, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x16, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x64, 0x62, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x61, 0x67,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x62,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x67, 0x22, 0xcf, 0x01, 0x0a, 0x23,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x55, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x12, 0xb2, 0xda, 0x21, 0x0e, 0x0a, 0x0c, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x68, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x54, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x61,
	0x64, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x12,
	0x2c, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xdb, 0x01,
	0x0a, 0x22, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x12, 0xb2, 0xda, 0x21, 0x0e, 0x0a, 0x0c, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x2b,
	0x0a, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x08, 0xca, 0xc6, 0x27, 0x04, 0x12, 0x02, 0x22, 0x00, 0x52, 0x0b,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4e, 0x0a, 0x16, 0x64,
	0x62, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x19, 0xca, 0xc6, 0x27,
	0x15, 0x2a, 0x13, 0x52, 0x11, 0x42, 0x0f, 0x5e, 0x76, 0x5b, 0x30, 0x2d, 0x39, 0x2e, 0x5d, 0x7b,
	0x31, 0x2c, 0x36, 0x34, 0x7d, 0x24, 0x52, 0x13, 0x64, 0x62, 0x44, 0x61, 0x74, 0x61, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x6b, 0x0a, 0x23, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x44, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x62,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x93, 0x02, 0x0a, 0x1b, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0xb2, 0xda, 0x21, 0x0e, 0x0a, 0x0c, 0x0a, 0x0a,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74,
	0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x73, 0x68, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x12, 0x40, 0x0a, 0x0f,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0e,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4e,
	0x0a, 0x16, 0x64, 0x62, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x19,
	0xca, 0xc6, 0x27, 0x15, 0x2a, 0x13, 0x52, 0x11, 0x42, 0x0f, 0x5e, 0x76, 0x5b, 0x30, 0x2d, 0x39,
	0x2e, 0x5d, 0x7b, 0x31, 0x2c, 0x36, 0x34, 0x7d, 0x24, 0x52, 0x13, 0x64, 0x62, 0x44, 0x61, 0x74,
	0x61, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x82,
	0x01, 0xe8, 0xde, 0x21, 0x00, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x42, 0x15, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x00, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x77, 0x61, 0x6e, 0x2f, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f,
	0x6d, 0x65, 0x74, 0x61, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x3b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	goten_meta_service_proto_v1_deployment_custom_proto_rawDescOnce sync.Once
	goten_meta_service_proto_v1_deployment_custom_proto_rawDescData = goten_meta_service_proto_v1_deployment_custom_proto_rawDesc
)

func goten_meta_service_proto_v1_deployment_custom_proto_rawDescGZIP() []byte {
	goten_meta_service_proto_v1_deployment_custom_proto_rawDescOnce.Do(func() {
		goten_meta_service_proto_v1_deployment_custom_proto_rawDescData = protoimpl.X.CompressGZIP(goten_meta_service_proto_v1_deployment_custom_proto_rawDescData)
	})
	return goten_meta_service_proto_v1_deployment_custom_proto_rawDescData
}

var goten_meta_service_proto_v1_deployment_custom_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var goten_meta_service_proto_v1_deployment_custom_proto_goTypes = []interface{}{
	(*BeginUpgradeRequest)(nil),                      // 0: goten.meta.v1.BeginUpgradeRequest
	(*SetAvailableUpgradeRequest)(nil),               // 1: goten.meta.v1.SetAvailableUpgradeRequest
	(*NotifyShardsUpgradeReadinessRequest)(nil),      // 2: goten.meta.v1.NotifyShardsUpgradeReadinessRequest
	(*GetOrRegisterDataUpdateTaskRequest)(nil),       // 3: goten.meta.v1.GetOrRegisterDataUpdateTaskRequest
	(*GetOrRegisterDataUpdateTaskResponse)(nil),      // 4: goten.meta.v1.GetOrRegisterDataUpdateTaskResponse
	(*UpdateDataTaskUpdateRequest)(nil),              // 5: goten.meta.v1.UpdateDataTaskUpdateRequest
	(*deployment.Deployment_DbUpdateTaskStatus)(nil), // 6: goten.meta.v1.Deployment.DbUpdateTaskStatus
	(*structpb.Struct)(nil),                          // 7: google.protobuf.Struct
}
var goten_meta_service_proto_v1_deployment_custom_proto_depIdxs = []int32{
	6, // 0: goten.meta.v1.GetOrRegisterDataUpdateTaskResponse.status:type_name -> goten.meta.v1.Deployment.DbUpdateTaskStatus
	7, // 1: goten.meta.v1.UpdateDataTaskUpdateRequest.progress_status:type_name -> google.protobuf.Struct
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { goten_meta_service_proto_v1_deployment_custom_proto_init() }
func goten_meta_service_proto_v1_deployment_custom_proto_init() {
	if goten_meta_service_proto_v1_deployment_custom_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {

		goten_meta_service_proto_v1_deployment_custom_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeginUpgradeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		goten_meta_service_proto_v1_deployment_custom_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAvailableUpgradeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		goten_meta_service_proto_v1_deployment_custom_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyShardsUpgradeReadinessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		goten_meta_service_proto_v1_deployment_custom_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrRegisterDataUpdateTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		goten_meta_service_proto_v1_deployment_custom_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrRegisterDataUpdateTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		goten_meta_service_proto_v1_deployment_custom_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDataTaskUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}

	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: goten_meta_service_proto_v1_deployment_custom_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           goten_meta_service_proto_v1_deployment_custom_proto_goTypes,
		DependencyIndexes: goten_meta_service_proto_v1_deployment_custom_proto_depIdxs,
		MessageInfos:      goten_meta_service_proto_v1_deployment_custom_proto_msgTypes,
	}.Build()
	goten_meta_service_proto_v1_deployment_custom_proto = out.File
	goten_meta_service_proto_v1_deployment_custom_proto_rawDesc = nil
	goten_meta_service_proto_v1_deployment_custom_proto_goTypes = nil
	goten_meta_service_proto_v1_deployment_custom_proto_depIdxs = nil
}
