// Code generated by protoc-gen-goten-object
// File: goten/types/memo.proto
// DO NOT EDIT!!!

package memo

import (
	"fmt"
	"sort"

	"google.golang.org/protobuf/proto"
	googlefieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"

	gotenobject "github.com/cloudwan/goten-sdk/runtime/object"
)

// proto imports
import (
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

// ensure the imports are used
var (
	_ = new(fmt.Stringer)
	_ = new(sort.Interface)

	_ = new(proto.Message)
	_ = googlefieldmaskpb.FieldMask{}

	_ = new(gotenobject.FieldPath)
)

// make sure we're using proto imports
var (
	_ = &timestamppb.Timestamp{}
)

func (o *Memo) GotenObjectExt() {}

func (o *Memo) MakeFullFieldMask() *Memo_FieldMask {
	return FullMemo_FieldMask()
}

func (o *Memo) MakeRawFullFieldMask() gotenobject.FieldMask {
	return FullMemo_FieldMask()
}

func (o *Memo) MakeDiffFieldMask(other *Memo) *Memo_FieldMask {
	if o == nil && other == nil {
		return &Memo_FieldMask{}
	}
	if o == nil || other == nil {
		return FullMemo_FieldMask()
	}

	res := &Memo_FieldMask{}
	if !proto.Equal(o.GetCreateTime(), other.GetCreateTime()) {
		res.Paths = append(res.Paths, &Memo_FieldTerminalPath{selector: Memo_FieldPathSelectorCreateTime})
	}
	if !proto.Equal(o.GetUpdateTime(), other.GetUpdateTime()) {
		res.Paths = append(res.Paths, &Memo_FieldTerminalPath{selector: Memo_FieldPathSelectorUpdateTime})
	}
	if o.GetMessage() != other.GetMessage() {
		res.Paths = append(res.Paths, &Memo_FieldTerminalPath{selector: Memo_FieldPathSelectorMessage})
	}
	if o.GetCreatedBy() != other.GetCreatedBy() {
		res.Paths = append(res.Paths, &Memo_FieldTerminalPath{selector: Memo_FieldPathSelectorCreatedBy})
	}
	return res
}

func (o *Memo) MakeRawDiffFieldMask(other gotenobject.GotenObjectExt) gotenobject.FieldMask {
	return o.MakeDiffFieldMask(other.(*Memo))
}

func (o *Memo) Clone() *Memo {
	if o == nil {
		return nil
	}
	result := &Memo{}
	result.CreateTime = proto.Clone(o.CreateTime).(*timestamppb.Timestamp)
	result.UpdateTime = proto.Clone(o.UpdateTime).(*timestamppb.Timestamp)
	result.Message = o.Message
	result.CreatedBy = o.CreatedBy
	return result
}

func (o *Memo) CloneRaw() gotenobject.GotenObjectExt {
	return o.Clone()
}

func (o *Memo) Merge(source *Memo) {
	if source.GetCreateTime() != nil {
		if o.CreateTime == nil {
			o.CreateTime = new(timestamppb.Timestamp)
		}
		proto.Merge(o.CreateTime, source.GetCreateTime())
	}
	if source.GetUpdateTime() != nil {
		if o.UpdateTime == nil {
			o.UpdateTime = new(timestamppb.Timestamp)
		}
		proto.Merge(o.UpdateTime, source.GetUpdateTime())
	}
	o.Message = source.GetMessage()
	o.CreatedBy = source.GetCreatedBy()
}

func (o *Memo) MergeRaw(source gotenobject.GotenObjectExt) {
	o.Merge(source.(*Memo))
}
