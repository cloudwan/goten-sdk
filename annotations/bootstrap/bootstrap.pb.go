// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v4.25.2
// source: goten/annotations/bootstrap.proto

package bootstrap

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SyncType defines how resource is synced across many regions. This information is passed to generated
// proto file for resource.
type Resource_MultiRegionSpec_SyncType int32

const (
	// If default option is set, then:
	// * IF particular instance of the resource has ancestor that is holding multi-region policy, then
	// resource is synced to regions as allowed by policy (ALWAYS_IN_SCOPE - unless resource is forbidden
	// from being synced via disable criteria in MultiRegionPolicy.
	// * IF particular instance of the resource does not have any ancestor holding multi-region policy,
	// then resource is always synced - everywhere (ALWAYS_GLOBALLY)
	Resource_MultiRegionSpec_DEFAULT Resource_MultiRegionSpec_SyncType = 0
	// Resource will be always synced within its scope. If it has no parent with MultiRegionPolicy,
	// it is same as ALWAYS_GLOBALLY.
	Resource_MultiRegionSpec_ALWAYS_IN_SCOPE Resource_MultiRegionSpec_SyncType = 1
	// Resource will never be synced.
	Resource_MultiRegionSpec_NEVER Resource_MultiRegionSpec_SyncType = 2
	// Resource will be always synced across all regions according to the service.
	Resource_MultiRegionSpec_ALWAYS_GLOBALLY Resource_MultiRegionSpec_SyncType = 3
)

// Enum value maps for Resource_MultiRegionSpec_SyncType.
var (
	Resource_MultiRegionSpec_SyncType_name = map[int32]string{
		0: "DEFAULT",
		1: "ALWAYS_IN_SCOPE",
		2: "NEVER",
		3: "ALWAYS_GLOBALLY",
	}
	Resource_MultiRegionSpec_SyncType_value = map[string]int32{
		"DEFAULT":         0,
		"ALWAYS_IN_SCOPE": 1,
		"NEVER":           2,
		"ALWAYS_GLOBALLY": 3,
	}
)

func (x Resource_MultiRegionSpec_SyncType) Enum() *Resource_MultiRegionSpec_SyncType {
	p := new(Resource_MultiRegionSpec_SyncType)
	*p = x
	return p
}

func (x Resource_MultiRegionSpec_SyncType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Resource_MultiRegionSpec_SyncType) Descriptor() protoreflect.EnumDescriptor {
	return file_goten_annotations_bootstrap_proto_enumTypes[0].Descriptor()
}

func (Resource_MultiRegionSpec_SyncType) Type() protoreflect.EnumType {
	return &file_goten_annotations_bootstrap_proto_enumTypes[0]
}

func (x Resource_MultiRegionSpec_SyncType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Resource_MultiRegionSpec_SyncType.Descriptor instead.
func (Resource_MultiRegionSpec_SyncType) EnumDescriptor() ([]byte, []int) {
	return file_goten_annotations_bootstrap_proto_rawDescGZIP(), []int{1, 0, 0}
}

// Transaction describes isolation level or describes the way t is set.
type Action_StoreHandleSpec_Transaction int32

const (
	// NONE indicates that during method execution no transaction level is enforced
	// and everything goes directly to database.
	Action_StoreHandleSpec_NONE Action_StoreHandleSpec_Transaction = 0
	// SNAPSHOT indicates that transaction should be aborted and retried if any
	// resource that was read was modified in the meantime by another call.
	Action_StoreHandleSpec_SNAPSHOT Action_StoreHandleSpec_Transaction = 1
	// MANUAL instructs code-gen that developer wishes to set transaction
	// in the code - manually. This may enable use cases if multiple transactions
	// need to be set independently during one call. Any read/write call to the store
	// without code setting a transaction will result in a failure.
	Action_StoreHandleSpec_MANUAL Action_StoreHandleSpec_Transaction = 2
)

// Enum value maps for Action_StoreHandleSpec_Transaction.
var (
	Action_StoreHandleSpec_Transaction_name = map[int32]string{
		0: "NONE",
		1: "SNAPSHOT",
		2: "MANUAL",
	}
	Action_StoreHandleSpec_Transaction_value = map[string]int32{
		"NONE":     0,
		"SNAPSHOT": 1,
		"MANUAL":   2,
	}
)

func (x Action_StoreHandleSpec_Transaction) Enum() *Action_StoreHandleSpec_Transaction {
	p := new(Action_StoreHandleSpec_Transaction)
	*p = x
	return p
}

func (x Action_StoreHandleSpec_Transaction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Action_StoreHandleSpec_Transaction) Descriptor() protoreflect.EnumDescriptor {
	return file_goten_annotations_bootstrap_proto_enumTypes[1].Descriptor()
}

func (Action_StoreHandleSpec_Transaction) Type() protoreflect.EnumType {
	return &file_goten_annotations_bootstrap_proto_enumTypes[1]
}

func (x Action_StoreHandleSpec_Transaction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Action_StoreHandleSpec_Transaction.Descriptor instead.
func (Action_StoreHandleSpec_Transaction) EnumDescriptor() ([]byte, []int) {
	return file_goten_annotations_bootstrap_proto_rawDescGZIP(), []int{3, 0, 0}
}

// Service package configuration - which is logically-bound set of resources and APIs forming coherent,
// complete, reusable service.
type Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Service fully-qualified Service domain name, e.g. library.goten.com
	// Used as a registry.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// proto/grpc configuration
	Proto *Service_Proto `protobuf:"bytes,2,opt,name=proto,proto3" json:"proto,omitempty"`
	// List of imported services - each import must be
	// fully-qualified Service domain name, e.g. book.registry.goten.com
	Imports []string `protobuf:"bytes,3,rep,name=imports,proto3" json:"imports,omitempty"`
	// List of resources. For each resource goten will append implicit Api
	// with CRUD functionality with same name as resource.
	Resources []*Resource `protobuf:"bytes,4,rep,name=resources,proto3" json:"resources,omitempty"`
	// List of custom API modules.
	Apis []*Api `protobuf:"bytes,5,rep,name=apis,proto3" json:"apis,omitempty"`
	// List of scope attributes.
	ScopeAttributes []*ScopeAttribute `protobuf:"bytes,6,rep,name=scope_attributes,json=scopeAttributes,proto3" json:"scope_attributes,omitempty"`
	// Whether multi-region feature should be disabled.
	DisableMultiRegion bool `protobuf:"varint,7,opt,name=disable_multi_region,json=disableMultiRegion,proto3" json:"disable_multi_region,omitempty"`
}

func (x *Service) Reset() {
	*x = Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_bootstrap_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_bootstrap_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_goten_annotations_bootstrap_proto_rawDescGZIP(), []int{0}
}

func (x *Service) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Service) GetProto() *Service_Proto {
	if x != nil {
		return x.Proto
	}
	return nil
}

func (x *Service) GetImports() []string {
	if x != nil {
		return x.Imports
	}
	return nil
}

func (x *Service) GetResources() []*Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *Service) GetApis() []*Api {
	if x != nil {
		return x.Apis
	}
	return nil
}

func (x *Service) GetScopeAttributes() []*ScopeAttribute {
	if x != nil {
		return x.ScopeAttributes
	}
	return nil
}

func (x *Service) GetDisableMultiRegion() bool {
	if x != nil {
		return x.DisableMultiRegion
	}
	return false
}

// Resource is basically a protobuf message with additional resource annotation. This annotation gives unique
// resource identifier "name" (includes parent scoping) and "metadata". Goten generates standard auxiliary
// objects around Resource: Filter, Paging related (OrderBy, Cursor), Access (CRUD for both Storage and API).
// Each resource also inherits by default Goten Object auxiliaries: Field paths and field mask, for fast
// cloning, merging, assignments etc.
type Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resource Name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Plural form of name - defaults to Name+"s"
	Plural string `protobuf:"bytes,2,opt,name=plural,proto3" json:"plural,omitempty"`
	// List of possible parents resource can belong to.
	// If one of the parents is empty string, then resource optionally may not
	// have any parent
	Parents []string `protobuf:"bytes,3,rep,name=parents,proto3" json:"parents,omitempty"`
	// List of scope attributes attached to this resource. If attribute is defined by a service, then
	// string should simply match field "name" in defined ScopeAttribute. Otherwise, it should contain
	// fully qualified name: "${proto_package}/${name}" where name and proto_package are fields in
	// ScopeAttribute.
	ScopeAttributes []string `protobuf:"bytes,4,rep,name=scope_attributes,json=scopeAttributes,proto3" json:"scope_attributes,omitempty"`
	// ID pattern for validation, if not defined, [a-z][a-z0-9\\-]{0,28}[a-z0-9] is used.
	// This only defines behavior of the last name segment of a resource.
	IdPattern string `protobuf:"bytes,5,opt,name=id_pattern,json=idPattern,proto3" json:"id_pattern,omitempty"`
	// List of additional custom actions that will belong to the primary Api
	// created implicitly for this resource, along with CRUD.
	Actions []*Action `protobuf:"bytes,6,rep,name=actions,proto3" json:"actions,omitempty"`
	// List of optional features to be added to resource
	OptIns *Resource_OptIns `protobuf:"bytes,7,opt,name=opt_ins,json=optIns,proto3" json:"opt_ins,omitempty"`
	// List of standard resource features to be excluded from generation.
	OptOuts *Resource_OptOuts `protobuf:"bytes,8,opt,name=opt_outs,json=optOuts,proto3" json:"opt_outs,omitempty"`
	// MultiRegion specification for this resource. Mandatory if multi-region feature is enabled.
	MultiRegion *Resource_MultiRegionSpec `protobuf:"bytes,9,opt,name=multi_region,json=multiRegion,proto3" json:"multi_region,omitempty"`
	// Information about resource replacement in new
	// version. If not provided, default object is generated.
	// See Versioning doc to see defaults.
	Versioning *Resource_Versioning `protobuf:"bytes,10,opt,name=versioning,proto3" json:"versioning,omitempty"`
}

func (x *Resource) Reset() {
	*x = Resource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_bootstrap_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_bootstrap_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_goten_annotations_bootstrap_proto_rawDescGZIP(), []int{1}
}

func (x *Resource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Resource) GetPlural() string {
	if x != nil {
		return x.Plural
	}
	return ""
}

func (x *Resource) GetParents() []string {
	if x != nil {
		return x.Parents
	}
	return nil
}

func (x *Resource) GetScopeAttributes() []string {
	if x != nil {
		return x.ScopeAttributes
	}
	return nil
}

func (x *Resource) GetIdPattern() string {
	if x != nil {
		return x.IdPattern
	}
	return ""
}

func (x *Resource) GetActions() []*Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *Resource) GetOptIns() *Resource_OptIns {
	if x != nil {
		return x.OptIns
	}
	return nil
}

func (x *Resource) GetOptOuts() *Resource_OptOuts {
	if x != nil {
		return x.OptOuts
	}
	return nil
}

func (x *Resource) GetMultiRegion() *Resource_MultiRegionSpec {
	if x != nil {
		return x.MultiRegion
	}
	return nil
}

func (x *Resource) GetVersioning() *Resource_Versioning {
	if x != nil {
		return x.Versioning
	}
	return nil
}

// Set of logically associated actions. For an Api instance, goten bootstrap will generate GRPC service file
// <api_name>_service.proto, plus <api_name>_custom.proto if Api contains developer-defined actions.
type Api struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the service, for example "Authorization"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// List of actions that belong to this Api.
	Actions []*Action `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *Api) Reset() {
	*x = Api{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_bootstrap_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Api) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Api) ProtoMessage() {}

func (x *Api) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_bootstrap_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Api.ProtoReflect.Descriptor instead.
func (*Api) Descriptor() ([]byte, []int) {
	return file_goten_annotations_bootstrap_proto_rawDescGZIP(), []int{2}
}

func (x *Api) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Api) GetActions() []*Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

// Action describes GRPC call. Based on its annotation, goten bootstrap will generate proto representation in
// <api_name>_service.proto file. Also, for developer defined actions, bootstrap will provide skeleton request/response
// objects in <api_name>_custom.proto (unless asked not to do so).
type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name, e.g. CreatePod
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Verb indicates short abbreviation of action, like "create", "delete".
	Verb string `protobuf:"bytes,2,opt,name=verb,proto3" json:"verb,omitempty"`
	// Operated resource info defines on which resource action operates and how.
	// Always present for Actions attached to resources (implicitly).
	OpResourceInfo *Action_OperatedResource `protobuf:"bytes,3,opt,name=op_resource_info,json=opResourceInfo,proto3" json:"op_resource_info,omitempty"`
	// Request Message Name, by default its equal to <Action.Name>Request.
	RequestName string `protobuf:"bytes,4,opt,name=request_name,json=requestName,proto3" json:"request_name,omitempty"`
	// Whether to skip request message stub generation, e.g. when response
	// originates in different file/package
	SkipRequestMsgGen bool `protobuf:"varint,5,opt,name=skip_request_msg_gen,json=skipRequestMsgGen,proto3" json:"skip_request_msg_gen,omitempty"`
	// Response Message Name, by default its equal to <Action.Name>Response.
	ResponseName string `protobuf:"bytes,6,opt,name=response_name,json=responseName,proto3" json:"response_name,omitempty"`
	// Whether to skip response message stub generation, e.g. when response
	// originates in different file/package
	SkipResponseMsgGen bool `protobuf:"varint,7,opt,name=skip_response_msg_gen,json=skipResponseMsgGen,proto3" json:"skip_response_msg_gen,omitempty"`
	// Whether request is streaming
	StreamingRequest bool `protobuf:"varint,8,opt,name=streaming_request,json=streamingRequest,proto3" json:"streaming_request,omitempty"`
	// Whether response is streaming
	StreamingResponse bool `protobuf:"varint,9,opt,name=streaming_response,json=streamingResponse,proto3" json:"streaming_response,omitempty"`
	// Customizations for grpc transcoding
	GrpcTranscoding *Action_GrpcTranscodingCustomizations `protobuf:"bytes,10,opt,name=grpc_transcoding,json=grpcTranscoding,proto3" json:"grpc_transcoding,omitempty"`
	// Spec for store handle middleware (configures transaction)
	WithStoreHandle *Action_StoreHandleSpec `protobuf:"bytes,11,opt,name=with_store_handle,json=withStoreHandle,proto3" json:"with_store_handle,omitempty"`
	// Specification describing routing for given action.
	MultiRegionRouting *Action_MultiRegionSpec `protobuf:"bytes,12,opt,name=multi_region_routing,json=multiRegionRouting,proto3" json:"multi_region_routing,omitempty"`
	// Information about action replacement in new
	// version. If not provided, default object is generated.
	// See Versioning description to see defaults.
	Versioning *Action_Versioning `protobuf:"bytes,13,opt,name=versioning,proto3" json:"versioning,omitempty"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_bootstrap_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_bootstrap_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_goten_annotations_bootstrap_proto_rawDescGZIP(), []int{3}
}

func (x *Action) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Action) GetVerb() string {
	if x != nil {
		return x.Verb
	}
	return ""
}

func (x *Action) GetOpResourceInfo() *Action_OperatedResource {
	if x != nil {
		return x.OpResourceInfo
	}
	return nil
}

func (x *Action) GetRequestName() string {
	if x != nil {
		return x.RequestName
	}
	return ""
}

func (x *Action) GetSkipRequestMsgGen() bool {
	if x != nil {
		return x.SkipRequestMsgGen
	}
	return false
}

func (x *Action) GetResponseName() string {
	if x != nil {
		return x.ResponseName
	}
	return ""
}

func (x *Action) GetSkipResponseMsgGen() bool {
	if x != nil {
		return x.SkipResponseMsgGen
	}
	return false
}

func (x *Action) GetStreamingRequest() bool {
	if x != nil {
		return x.StreamingRequest
	}
	return false
}

func (x *Action) GetStreamingResponse() bool {
	if x != nil {
		return x.StreamingResponse
	}
	return false
}

func (x *Action) GetGrpcTranscoding() *Action_GrpcTranscodingCustomizations {
	if x != nil {
		return x.GrpcTranscoding
	}
	return nil
}

func (x *Action) GetWithStoreHandle() *Action_StoreHandleSpec {
	if x != nil {
		return x.WithStoreHandle
	}
	return nil
}

func (x *Action) GetMultiRegionRouting() *Action_MultiRegionSpec {
	if x != nil {
		return x.MultiRegionRouting
	}
	return nil
}

func (x *Action) GetVersioning() *Action_Versioning {
	if x != nil {
		return x.Versioning
	}
	return nil
}

// ScopeAttribute is used in the context of resource names. It describes additional extra information that needs to be
// encoded into resource scope and therefore, next to the resource parents, it will de facto influence all name
// patterns generated for a resource. One resource can have many scope attributes. Unlike resource parents, where only
// one parent can be active at the moment, all scope attributes can be active - but some can be skipped (see field
// is_optional). ScopeAttributes can be defined in api skeleton file.
// Each scope attribute must be defined in proto file as a message and containing specification as required.
// Fields name and proto_package must be matching.
type ScopeAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of an attribute.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Plural form of name - defaults to Name+"s"
	Plural string `protobuf:"bytes,2,opt,name=plural,proto3" json:"plural,omitempty"`
	// Proto package where message with description of this attribute is located.
	ProtoPackage string `protobuf:"bytes,3,opt,name=proto_package,json=protoPackage,proto3" json:"proto_package,omitempty"`
	// Whether this attribute is optional or not. If it is, it doubles number of possible name patterns.
	IsOptional bool `protobuf:"varint,4,opt,name=is_optional,json=isOptional,proto3" json:"is_optional,omitempty"`
}

func (x *ScopeAttribute) Reset() {
	*x = ScopeAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_bootstrap_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScopeAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScopeAttribute) ProtoMessage() {}

func (x *ScopeAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_bootstrap_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScopeAttribute.ProtoReflect.Descriptor instead.
func (*ScopeAttribute) Descriptor() ([]byte, []int) {
	return file_goten_annotations_bootstrap_proto_rawDescGZIP(), []int{4}
}

func (x *ScopeAttribute) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ScopeAttribute) GetPlural() string {
	if x != nil {
		return x.Plural
	}
	return ""
}

func (x *ScopeAttribute) GetProtoPackage() string {
	if x != nil {
		return x.ProtoPackage
	}
	return ""
}

func (x *ScopeAttribute) GetIsOptional() bool {
	if x != nil {
		return x.IsOptional
	}
	return false
}

// Proto configuration
type Service_Proto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// package configuration
	Package *Service_Proto_Package `protobuf:"bytes,1,opt,name=package,proto3" json:"package,omitempty"`
	// grpc service configuration
	Service *Service_Proto_Service `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
}

func (x *Service_Proto) Reset() {
	*x = Service_Proto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_bootstrap_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service_Proto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service_Proto) ProtoMessage() {}

func (x *Service_Proto) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_bootstrap_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service_Proto.ProtoReflect.Descriptor instead.
func (*Service_Proto) Descriptor() ([]byte, []int) {
	return file_goten_annotations_bootstrap_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Service_Proto) GetPackage() *Service_Proto_Package {
	if x != nil {
		return x.Package
	}
	return nil
}

func (x *Service_Proto) GetService() *Service_Proto_Service {
	if x != nil {
		return x.Service
	}
	return nil
}

// message describing package-wide config
type Service_Proto_Package struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// version-less package name, e.g. ntt.apis.iam
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// current package version, e.g. v1alpha, v1, v2
	CurrentVersion string `protobuf:"bytes,2,opt,name=current_version,json=currentVersion,proto3" json:"current_version,omitempty"`
	// next package version if any
	NextVersion string `protobuf:"bytes,4,opt,name=next_version,json=nextVersion,proto3" json:"next_version,omitempty"`
	// golang package location, e.g. github.com/ntt/iam
	GoPackage string `protobuf:"bytes,3,opt,name=go_package,json=goPackage,proto3" json:"go_package,omitempty"`
	// Path used for relative proto files imports, e.g.
	// goten/example/library/proto
	ProtoImportPathPrefix string `protobuf:"bytes,7,opt,name=proto_import_path_prefix,json=protoImportPathPrefix,proto3" json:"proto_import_path_prefix,omitempty"`
}

func (x *Service_Proto_Package) Reset() {
	*x = Service_Proto_Package{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_bootstrap_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service_Proto_Package) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service_Proto_Package) ProtoMessage() {}

func (x *Service_Proto_Package) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_bootstrap_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service_Proto_Package.ProtoReflect.Descriptor instead.
func (*Service_Proto_Package) Descriptor() ([]byte, []int) {
	return file_goten_annotations_bootstrap_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *Service_Proto_Package) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Service_Proto_Package) GetCurrentVersion() string {
	if x != nil {
		return x.CurrentVersion
	}
	return ""
}

func (x *Service_Proto_Package) GetNextVersion() string {
	if x != nil {
		return x.NextVersion
	}
	return ""
}

func (x *Service_Proto_Package) GetGoPackage() string {
	if x != nil {
		return x.GoPackage
	}
	return ""
}

func (x *Service_Proto_Package) GetProtoImportPathPrefix() string {
	if x != nil {
		return x.ProtoImportPathPrefix
	}
	return ""
}

type Service_Proto_Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// grpc service name, e.g. Metric, IAM
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// default endpoint for clients. Defaults to Service.name
	DefaultHost string `protobuf:"bytes,2,opt,name=default_host,json=defaultHost,proto3" json:"default_host,omitempty"`
	// comma-separated list of needed client oauth scopes, e.g.
	// "https://apis.goten.com,https://api.goten.com"
	OauthScopes string `protobuf:"bytes,3,opt,name=oauth_scopes,json=oauthScopes,proto3" json:"oauth_scopes,omitempty"`
	// Optional, additional HTTP prefix to be added for all actions
	// defined within whole service for GRPC transcoding purpose.
	// If not provided, then all HTTP paths will have standard format
	// /${version}/${action-derived-suffix}. For example, action ListDevices
	// in service with version v1 could have following format:
	// /v1/{parent=projects/*}/devices (assuming resource Device is
	// child of project). If namespace prefix is defined (for example
	// "devices") then this value would be: /devices/v1/{parent=projects/*}/devices.
	// This is useful if generated service is reused in multiple applications
	// and needs additional namespace.
	HttpNamespacePrefix string `protobuf:"bytes,4,opt,name=http_namespace_prefix,json=httpNamespacePrefix,proto3" json:"http_namespace_prefix,omitempty"`
}

func (x *Service_Proto_Service) Reset() {
	*x = Service_Proto_Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_bootstrap_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service_Proto_Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service_Proto_Service) ProtoMessage() {}

func (x *Service_Proto_Service) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_bootstrap_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service_Proto_Service.ProtoReflect.Descriptor instead.
func (*Service_Proto_Service) Descriptor() ([]byte, []int) {
	return file_goten_annotations_bootstrap_proto_rawDescGZIP(), []int{0, 0, 1}
}

func (x *Service_Proto_Service) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Service_Proto_Service) GetDefaultHost() string {
	if x != nil {
		return x.DefaultHost
	}
	return ""
}

func (x *Service_Proto_Service) GetOauthScopes() string {
	if x != nil {
		return x.OauthScopes
	}
	return ""
}

func (x *Service_Proto_Service) GetHttpNamespacePrefix() string {
	if x != nil {
		return x.HttpNamespacePrefix
	}
	return ""
}

// MultiRegionSpec defines how resource is modelled in a context of multi-region environment -
// informs how resource is synced or contains additional information about routing for basic actions.
type Resource_MultiRegionSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sets syncing mode for this resource.
	SyncType Resource_MultiRegionSpec_SyncType `protobuf:"varint,1,opt,name=sync_type,json=syncType,proto3,enum=goten.bootstrap.Resource_MultiRegionSpec_SyncType" json:"sync_type,omitempty"`
	// List of action patterns for which goten will not generate code responsible for request routing. Examples: "*"
	// for all or "{List,Create}BookCopies".
	// By default, goten will generate routing code for all basic actions like list, get, create, update etc. However,
	// if developer wants, this can be disabled by providing patterns here.
	// Disabling code-gen based routing does not mean request is not routable - developer can provide own implementation
	// by adding method to routing middleware which is still generated (type and constructor). If developer disables
	// code-gen based routing and does not provide own implementation, then no routing will be executed by server
	// and execution will be passed to next middleware without failure.
	SkipCodeGenBasedRoutingBasicActions []string `protobuf:"bytes,2,rep,name=skip_code_gen_based_routing_basic_actions,json=skipCodeGenBasedRoutingBasicActions,proto3" json:"skip_code_gen_based_routing_basic_actions,omitempty"`
	// Informs if this resource is a holder of a types.MultiRegionPolicy object, which defines syncing policy for all child
	// resources. It also informs proto generation tool to include policy object in resource schema.
	IsPolicyHolder bool `protobuf:"varint,3,opt,name=is_policy_holder,json=isPolicyHolder,proto3" json:"is_policy_holder,omitempty"`
}

func (x *Resource_MultiRegionSpec) Reset() {
	*x = Resource_MultiRegionSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_bootstrap_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource_MultiRegionSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource_MultiRegionSpec) ProtoMessage() {}

func (x *Resource_MultiRegionSpec) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_bootstrap_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource_MultiRegionSpec.ProtoReflect.Descriptor instead.
func (*Resource_MultiRegionSpec) Descriptor() ([]byte, []int) {
	return file_goten_annotations_bootstrap_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Resource_MultiRegionSpec) GetSyncType() Resource_MultiRegionSpec_SyncType {
	if x != nil {
		return x.SyncType
	}
	return Resource_MultiRegionSpec_DEFAULT
}

func (x *Resource_MultiRegionSpec) GetSkipCodeGenBasedRoutingBasicActions() []string {
	if x != nil {
		return x.SkipCodeGenBasedRoutingBasicActions
	}
	return nil
}

func (x *Resource_MultiRegionSpec) GetIsPolicyHolder() bool {
	if x != nil {
		return x.IsPolicyHolder
	}
	return false
}

// Versioning information. Provides information which resource in the new version replaces this one and
// to what degree goten should automatically generate transformers (Transformer is an object transforming
// object in older version to newer version and vice versa - for example we need to translate Create<Res>
// object to similar object in newer version. Resource itself needs translation in both directions).
type Resource_Versioning struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the resource in the next version. If not provided, then:
	//   - if resource with same name is found in the next version, replacement is assumed automatically
	//   - if resource with same name is not found in the next version, it is assumed this resource is discontinued
	//     and for custom, manual handler will have to be written to provide backward compatibility.
	Replacement string `protobuf:"bytes,1,opt,name=replacement,proto3" json:"replacement,omitempty"`
	// List of action patterns for which goten will not generate request/response transformers, e.g. "*" for all or
	// "{List,Create}BookCopies".
	// Goten won't generate transformers for any request/response and code-generated server middleware transformer
	// will panic if called for those methods. Developer will need to provide handlers manually in the code.
	// By default, goten will provide transformers for all actions.
	SkipTransformersBasicActions []string `protobuf:"bytes,2,rep,name=skip_transformers_basic_actions,json=skipTransformersBasicActions,proto3" json:"skip_transformers_basic_actions,omitempty"`
	// If true, goten will not generate transformer for resource access (used to provide backward compatible Store,
	// which transforms references/queries from older to newer version).
	SkipAccessTransformer bool `protobuf:"varint,3,opt,name=skip_access_transformer,json=skipAccessTransformer,proto3" json:"skip_access_transformer,omitempty"`
	// If true, goten will skip transformers for <Res>Change objects.
	SkipResourceChangeTransformers bool `protobuf:"varint,4,opt,name=skip_resource_change_transformers,json=skipResourceChangeTransformers,proto3" json:"skip_resource_change_transformers,omitempty"`
}

func (x *Resource_Versioning) Reset() {
	*x = Resource_Versioning{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_bootstrap_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource_Versioning) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource_Versioning) ProtoMessage() {}

func (x *Resource_Versioning) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_bootstrap_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource_Versioning.ProtoReflect.Descriptor instead.
func (*Resource_Versioning) Descriptor() ([]byte, []int) {
	return file_goten_annotations_bootstrap_proto_rawDescGZIP(), []int{1, 1}
}

func (x *Resource_Versioning) GetReplacement() string {
	if x != nil {
		return x.Replacement
	}
	return ""
}

func (x *Resource_Versioning) GetSkipTransformersBasicActions() []string {
	if x != nil {
		return x.SkipTransformersBasicActions
	}
	return nil
}

func (x *Resource_Versioning) GetSkipAccessTransformer() bool {
	if x != nil {
		return x.SkipAccessTransformer
	}
	return false
}

func (x *Resource_Versioning) GetSkipResourceChangeTransformers() bool {
	if x != nil {
		return x.SkipResourceChangeTransformers
	}
	return false
}

// OptOuts contains list of flags indicating Goten resource features that should be excluded
// when generating proto/Golang files. Using OptOuts is necessary when for example developer
// does not want to use standard CRUD, or wants to skip name or metadata fields because they
// are not relevant for given resource. Warning: Using OptOuts renders Resource not compatible
// with standard Resource interface in Go package runtime/resource. It should be used rarely in
// very specific use cases.
type Resource_OptOuts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If true, "name" field is excluded from resource. Due to the fundamental nature of this, it also
	// disables paging and standard CRUD access.
	NameField bool `protobuf:"varint,1,opt,name=name_field,json=nameField,proto3" json:"name_field,omitempty"`
	// If true, skips metadata field. This disables sharding and multi-region layer of the resource.
	MetadataField bool `protobuf:"varint,2,opt,name=metadata_field,json=metadataField,proto3" json:"metadata_field,omitempty"`
	// If true, skips pagination feature and object generation.
	Paging bool `protobuf:"varint,3,opt,name=paging,proto3" json:"paging,omitempty"`
	// If true, disables <Resource>Change protobuf object generation and disables Watch feature from goten.
	ResourceChange bool `protobuf:"varint,4,opt,name=resource_change,json=resourceChange,proto3" json:"resource_change,omitempty"`
	// Skips standard CRUD and disables both API and Store access by being provided by goten.
	StandardCrudAccess bool `protobuf:"varint,5,opt,name=standard_crud_access,json=standardCrudAccess,proto3" json:"standard_crud_access,omitempty"`
	// If true, Resource will not be taken into account by "constraints" layer of database. It means:
	//   - References to a resource of this kind (Blocking, Cascade delete...) will not apply.
	//     Even if resource is referenced in blocking way, deletion will not cause database blockade.
	//   - Instances of this resource may declare references to other resources, but they will not be
	//     actually checked.
	//   - Resources of given type will not be garbage-collected by db-controllers.
	//
	// ResourceShadow (schema-mixin service) instances for a given resource type WILL NOT be created.
	// Note that setting this flag to true will make given resource type similar to resources brought
	// by Mixins.
	// This flag should be used for internal resource types, where users dont have write access to.
	DbConstraints bool `protobuf:"varint,7,opt,name=db_constraints,json=dbConstraints,proto3" json:"db_constraints,omitempty"`
	// list of glob patterns basic actions to skip generation, e.g. "*" for all or
	// "{List,Create}BookCopies". Unlike "standard_crud_access", it does not disable entirely
	// standard CRUD access for Store/API Access, even with "*". It also allows developer to
	// redefine their own basic CRUD functions and standard CRUD will try to pick them up.
	BasicActions []string `protobuf:"bytes,6,rep,name=basic_actions,json=basicActions,proto3" json:"basic_actions,omitempty"`
}

func (x *Resource_OptOuts) Reset() {
	*x = Resource_OptOuts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_bootstrap_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource_OptOuts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource_OptOuts) ProtoMessage() {}

func (x *Resource_OptOuts) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_bootstrap_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource_OptOuts.ProtoReflect.Descriptor instead.
func (*Resource_OptOuts) Descriptor() ([]byte, []int) {
	return file_goten_annotations_bootstrap_proto_rawDescGZIP(), []int{1, 2}
}

func (x *Resource_OptOuts) GetNameField() bool {
	if x != nil {
		return x.NameField
	}
	return false
}

func (x *Resource_OptOuts) GetMetadataField() bool {
	if x != nil {
		return x.MetadataField
	}
	return false
}

func (x *Resource_OptOuts) GetPaging() bool {
	if x != nil {
		return x.Paging
	}
	return false
}

func (x *Resource_OptOuts) GetResourceChange() bool {
	if x != nil {
		return x.ResourceChange
	}
	return false
}

func (x *Resource_OptOuts) GetStandardCrudAccess() bool {
	if x != nil {
		return x.StandardCrudAccess
	}
	return false
}

func (x *Resource_OptOuts) GetDbConstraints() bool {
	if x != nil {
		return x.DbConstraints
	}
	return false
}

func (x *Resource_OptOuts) GetBasicActions() []string {
	if x != nil {
		return x.BasicActions
	}
	return nil
}

// OptIns adds non-standard features to Resource.
type Resource_OptIns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If true, then standard CRUD will have Search<ResourcePluralName> on top of List<ResourcePluralName>
	// with additional "phrase" field.
	Searchable bool `protobuf:"varint,1,opt,name=searchable,proto3" json:"searchable,omitempty"`
}

func (x *Resource_OptIns) Reset() {
	*x = Resource_OptIns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_bootstrap_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource_OptIns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource_OptIns) ProtoMessage() {}

func (x *Resource_OptIns) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_bootstrap_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource_OptIns.ProtoReflect.Descriptor instead.
func (*Resource_OptIns) Descriptor() ([]byte, []int) {
	return file_goten_annotations_bootstrap_proto_rawDescGZIP(), []int{1, 3}
}

func (x *Resource_OptIns) GetSearchable() bool {
	if x != nil {
		return x.Searchable
	}
	return false
}

// StoreHandleSpec defines how store is accessed by an owning method, like:
// * Whether this is read-only or not
// * Transaction isolation level
// It is mandatory to set.
type Action_StoreHandleSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Should access to the store be read-only
	ReadOnly bool `protobuf:"varint,1,opt,name=readOnly,proto3" json:"readOnly,omitempty"`
	// Types that are assignable to TransactionPresent:
	//
	//	*Action_StoreHandleSpec_Transaction_
	TransactionPresent isAction_StoreHandleSpec_TransactionPresent `protobuf_oneof:"transaction_present"`
}

func (x *Action_StoreHandleSpec) Reset() {
	*x = Action_StoreHandleSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_bootstrap_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_StoreHandleSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_StoreHandleSpec) ProtoMessage() {}

func (x *Action_StoreHandleSpec) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_bootstrap_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_StoreHandleSpec.ProtoReflect.Descriptor instead.
func (*Action_StoreHandleSpec) Descriptor() ([]byte, []int) {
	return file_goten_annotations_bootstrap_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Action_StoreHandleSpec) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (m *Action_StoreHandleSpec) GetTransactionPresent() isAction_StoreHandleSpec_TransactionPresent {
	if m != nil {
		return m.TransactionPresent
	}
	return nil
}

func (x *Action_StoreHandleSpec) GetTransaction() Action_StoreHandleSpec_Transaction {
	if x, ok := x.GetTransactionPresent().(*Action_StoreHandleSpec_Transaction_); ok {
		return x.Transaction
	}
	return Action_StoreHandleSpec_NONE
}

type isAction_StoreHandleSpec_TransactionPresent interface {
	isAction_StoreHandleSpec_TransactionPresent()
}

type Action_StoreHandleSpec_Transaction_ struct {
	// Transaction level
	Transaction Action_StoreHandleSpec_Transaction `protobuf:"varint,2,opt,name=transaction,proto3,enum=goten.bootstrap.Action_StoreHandleSpec_Transaction,oneof"`
}

func (*Action_StoreHandleSpec_Transaction_) isAction_StoreHandleSpec_TransactionPresent() {}

// MultiRegionSpec defines routing of an action request if multi-region feature is used.
type Action_MultiRegionSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Instructs goten to NOT to generate code responsible for routing of this particular action.
	// By default, goten will try to deduce how action should be routed. For example, if it is marked as "plural"
	// (for resource), request has parent and/or filter field and response has "list" field, then it will try to
	// generate routing code similar to the one for "List<Res>" built-in requests. This is common pattern -> Many
	// services may provide custom actions like ListMy<Res>. It can also detect if request provides paging fields too.
	// If request is unary, concentrates on single resource (plural=false) and transaction level is snapshot, then
	// it will generate code that routes object to the region owning resource. If transaction level is none, then
	// it will optionally route to region which can read this resource (if current does not).
	// Sometimes it may be desirable to disable this guessing work by setting this parameter to false. This does not
	// mean action is not routable - developer may simply want to provide own implementation by simply adding a method
	// handling this action to routing middleware. If code-gen based routing is disabled by developer and no custom
	// implementation is provided, then no routing will be done by server and request will be passed to next middleware
	// without raising any error.
	// Its also possible to disable code-gen based routing for built-in actions, see ResourceParameters, field
	// multi_region.skip_code_gen_based_routing_basic_actions.
	SkipCodeGenBasedRouting bool `protobuf:"varint,1,opt,name=skip_code_gen_based_routing,json=skipCodeGenBasedRouting,proto3" json:"skip_code_gen_based_routing,omitempty"`
	// Informs code-gen tools that this action can be executed only on a region owning resource.
	// This field is applicable only to non-plural actions which operate on single resource only (and of course have
	// resource spec specified).
	// By default, transaction level is used to determine if this action should be executed on owning region. If it
	// is SNAPSHOT or MANUAL, then execute_on_owning_region is assumed to be true, otherwise false.
	ExecuteOnOwningRegion bool `protobuf:"varint,2,opt,name=execute_on_owning_region,json=executeOnOwningRegion,proto3" json:"execute_on_owning_region,omitempty"`
	// List of field paths in a request object containing resource name, used by a code-gen-based routing
	// as a way to determine how to handle request - basically it determines what multi-region policy should be
	// obtained for this request and which region is allowed to handle this action.
	// Relevant only for actions operating on a single resource, otherwise ignored.
	// If no field path is provided, then goten will get paths from resource.request_paths specification from Action object.
	// If they are not provided, and default cannot be determined, and no alternative way of routing is defined, error
	// will be raised. Developer can specify many potential field paths where resource is located - this could
	// be for example useful if request uses oneof object.
	ResourceFieldPaths []string `protobuf:"bytes,3,rep,name=resource_field_paths,json=resourceFieldPaths,proto3" json:"resource_field_paths,omitempty"`
	// List of field paths in a request object containing scope associated with this action. This "scope" must
	// be reference to a policy holder resource. "Parent" reference to a resource also will work (for example, if
	// Device is a child of Project, then field "parent" in ListDevices request is fine, because it will contains
	// reference to a Project). Based on scope field path, code-gen-based routing will determine which region will
	// need to handle current request.
	// This field is relevant for collection actions with resource defined.
	// If no field path is provided, then goten will get paths from resource.request_paths specification from Action object.
	// If they are not provided, and default cannot be determined, and no alternative way of routing is defined, error
	// will be raised. Developer can specify many potential field paths where resource is located - this could
	// be for example useful if request uses oneof object.
	ScopeFieldPaths []string `protobuf:"bytes,4,rep,name=scope_field_paths,json=scopeFieldPaths,proto3" json:"scope_field_paths,omitempty"`
	// List of field paths in a request object containing identifier of a region ID (just raw string) where the request
	// must be routed. This is an alternative way of routing compared to resource_field_paths or
	// scope_field_paths in this spec. Field path with region ID must not be a reference - just identifier of a
	// string type, an example value could be "us-west2".
	// If this annotation is specified, then execute_on_owning_region is irrelevant, as request explicitly says
	// which region is desired. If region id field path is defined along with resource and scope, then
	// scope/resource is used only to extract multi-region policy. Its not considered for routing.
	// Developer can specify many potential field paths where region ID is located - this could be for example useful
	// if requests uses oneof object.
	RegionIdFieldPaths []string `protobuf:"bytes,5,rep,name=region_id_field_paths,json=regionIdFieldPaths,proto3" json:"region_id_field_paths,omitempty"`
}

func (x *Action_MultiRegionSpec) Reset() {
	*x = Action_MultiRegionSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_bootstrap_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_MultiRegionSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_MultiRegionSpec) ProtoMessage() {}

func (x *Action_MultiRegionSpec) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_bootstrap_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_MultiRegionSpec.ProtoReflect.Descriptor instead.
func (*Action_MultiRegionSpec) Descriptor() ([]byte, []int) {
	return file_goten_annotations_bootstrap_proto_rawDescGZIP(), []int{3, 1}
}

func (x *Action_MultiRegionSpec) GetSkipCodeGenBasedRouting() bool {
	if x != nil {
		return x.SkipCodeGenBasedRouting
	}
	return false
}

func (x *Action_MultiRegionSpec) GetExecuteOnOwningRegion() bool {
	if x != nil {
		return x.ExecuteOnOwningRegion
	}
	return false
}

func (x *Action_MultiRegionSpec) GetResourceFieldPaths() []string {
	if x != nil {
		return x.ResourceFieldPaths
	}
	return nil
}

func (x *Action_MultiRegionSpec) GetScopeFieldPaths() []string {
	if x != nil {
		return x.ScopeFieldPaths
	}
	return nil
}

func (x *Action_MultiRegionSpec) GetRegionIdFieldPaths() []string {
	if x != nil {
		return x.RegionIdFieldPaths
	}
	return nil
}

// Versioning information. Provides information which action in the new version replaces this one and to what
// degree goten should automatically generate transformers (Transformer is an object transforming object in older
// version to newer version and vice versa).
type Action_Versioning struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the api with action from the next version. Full format is
	// "${API_NAME}/${ACTION_NAME}", for example: Provisioning/ProvisionDevice.
	// It is assumed that there is "Provisioning" Api with action
	// "ProvisionDevice" in the newer version of the service.
	// ${API_NAME} however can be omitted, if:
	// * In the newer version of the service, replacing action exists within API
	// that has same name as the Api in older version. For example, if Api name
	// "Provisioning" is same in new and old version, it can be omitted.
	// * If old and new action belongs to the main API for a resource, then
	// goten will also append API_NAME implicitly. If not provided at all, then
	// goten will try to find api+action with same names in the next version
	// service. If they cannot be found, then it is assumed that either action
	// is discontinued or developer will manually write handler for it.
	Replacement string `protobuf:"bytes,1,opt,name=replacement,proto3" json:"replacement,omitempty"`
}

func (x *Action_Versioning) Reset() {
	*x = Action_Versioning{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_bootstrap_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_Versioning) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_Versioning) ProtoMessage() {}

func (x *Action_Versioning) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_bootstrap_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_Versioning.ProtoReflect.Descriptor instead.
func (*Action_Versioning) Descriptor() ([]byte, []int) {
	return file_goten_annotations_bootstrap_proto_rawDescGZIP(), []int{3, 2}
}

func (x *Action_Versioning) GetReplacement() string {
	if x != nil {
		return x.Replacement
	}
	return ""
}

// OperatedResource provides information on which resource Action operates on and how.
// For example, it tells if action operates on single resource, many of them, or maybe on
// whole collection. It also specifies field paths in request/response object specific
// to the resource (like path to resource name field).
type Action_OperatedResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of a resource action operates on, e.g. "Device".
	// This field is checked only for custom Apis. Actions defined under
	// "resources" section will always have this field fixed on parent resource.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// IsCollection flag informs if given action concerns whole resource collection
	// or not. As a simple rule, action is of collection type is we cannot with 100%
	// accuracy define resource "name" but we can define "parent". For example, actions
	// like list or search are of collection type. "Create" operations are also of
	// collection type, as they involve creation of "new entry" in "collection directory",
	// and we dont necessarily know name of the created resource.
	// Subsequent update/delete would not be of collection type.
	// When this flag is set, generated HTTP Path (grpc transcoding) and Request will
	// match collection. E.g., instead of '/v1/{name=shelves/*/books/*}', it will generate
	// '/v1/{parent=shelves/*}/books'
	IsCollection bool `protobuf:"varint,2,opt,name=is_collection,json=isCollection,proto3" json:"is_collection,omitempty"`
	// IsPlural informs if given action operates on more than one resource. It must be set to true
	// for actions like List, Search, BatchGet. Most of them are of "collection" type as well,
	// however its not always the case. Note that in BatchGet we can define with 100% accuracy
	// all resource names - we only have (typically) more than one instance. In this case,
	// operation is of plural type, but not collection.
	IsPlural bool `protobuf:"varint,3,opt,name=is_plural,json=isPlural,proto3" json:"is_plural,omitempty"`
	// Tells whether request message should skip resource name, reference or body.
	// Generated HTTP path will be different, for example, instead of
	// /v1/{name=...} or /v1/{parent=...}, it will just generate /v1. In this way, action
	// can be assigned to a resource without having explicit referencing field in
	// in a request body.
	// Setting this value to true will invalidate field request_paths. Developer still
	// will be able to specify request_paths, but they will not be bound to any rules
	// applying to this object.
	// If resource is not specified, skip_resource_in_request is considered to
	// be set to true.
	SkipResourceInRequest bool `protobuf:"varint,4,opt,name=skip_resource_in_request,json=skipResourceInRequest,proto3" json:"skip_resource_in_request,omitempty"`
	// Set of important field paths within request object, like resource name
	// or parent name. This object is "semi-mandatory" if skip_resource_in_request is not
	// set to true. If request_paths is not provided, goten is populating
	// this field with default values. However, if the defaults do not match real field paths in
	// request body, compilation will fail at the further stage (protoc compilers). In the effect,
	// developer will be forced to explicitly "agree" with default values or manually provide their own
	// (hence semi-mandatory).
	// Action fields is_collection and is_plural are critical in interpreting request_paths
	// (and response_paths), as they influence what is allowed to be specified and what not.
	//
	// Rules:
	// - resource_parent MUST be specified only and only if is_collection is set to true AND
	// resource belongs to some parent at all. Otherwise, it MUST NOT be specified. If it is specified,
	// it must contain parent name or reference to a resource.
	// - If is_collection is set to false, then resource_name OR resource_body MUST
	// be specified. Depending on is_plural value, it must be single resource name/reference/body
	// or list of them.
	// - If is_collection is set to true, resource_name and resource_body may be
	// specified, but its not mandatory.
	// - resource_body and resource_name cannot be both specified.
	//
	// Following is assumed as default:
	// - If is_plural and is_collection are set to false, then resource_name will
	// contain one field path - "name". It is assumed to contain single resource name (or reference).
	// - If is_plural is set to true and is_collection is set to false, then
	// resource_name will contain one field path - "names". This field is assumed to contain list
	// of resource names (or references).
	// - If is_collection is set to true (value of is_plural can be either), then
	// resource_name will be left unpopulated, and resource_parent will contain single field
	// path - "parent". It is assumed to contain parent name (or reference) of resource. Field
	// is_plural however still will have an effect (for example on response field paths!).
	//
	// Paths used for built-in actions (parent is specified only if present for given resource):
	// - Request for Get<Resource> contains "name" in resource_name field.
	// - Request for BatchGet<Resources> contains "names" in resource_name field.
	// - Request for Watch<Resource> contains "name" in resource_name field.
	// - Request for Watch<Resources> contains "parent" in resource_parent field.
	// - Request for List<Resources> contains "parent" in resource_parent field.
	// - Request for Search<Resources> contains "parent" in resource_parent field.
	// - Request for Create<Resource> contains "<resource_name>" in resource_body field AND
	// "parent" in resource_parent field.
	// - Request for Update<Resource> contains "<resource_name>" in resource_body field.
	// - Request for Delete<Resource> contains "name" in resource_name field.
	RequestPaths *Action_OperatedResource_ObjectFieldPaths `protobuf:"bytes,5,opt,name=request_paths,json=requestPaths,proto3" json:"request_paths,omitempty"`
	// Set of important field paths within response object, like resource name.
	// This object optional and can be specified to provide useful functionalities to handler
	// extracting values of interest from responses.
	// Goten provides default values only for built-in actions. However, if developer specifies
	// this object, it must comply with all the rules determined by Action following fields: resource,
	// is_plural and is_collection. Specified paths must also be valid.
	// Rules:
	// - resource_parent MAY be specified only and only if is_collection is set to true
	// and resource may have some parent. Otherwise, it MUST NOT be specified. If it is specified,
	// it must contain parent name or reference of a resource.
	// - Fields resource_name OR resource_body MAY be specified if developer wants.
	// If they are specified, they must however point to name/reference/body field path. If is_plural
	// value is set to true, they must contain list of those values.
	// - resource_body and resource_name cannot be both specified.
	// - If response IS resource body, then developer must be just using resource_name and
	// not resource_body (if they use at all of course).
	// - In place of resource bodies it is allowed to use resource change objects (useful for watch
	// methods).
	//
	// Paths used in built-in actions for goten resources:
	// - Response for Get<Resource> contains "<resource_name_path>" in resource_name field
	// - Response for BatchGet<Resources> contains "<resource_plural>" in resource_body field
	// - Response for Watch<Resource> contains "change" in resource_body field.
	// - Response for Watch<Resources> contains "<resource_name>_changes" in resource_body field.
	// - Response for List<Resources> contains "<resource_plural>" in resource_body field.
	// - Response for Search<Resources> contains "<resource_plural>" in resource_body field.
	// - Response for Create<Resource> contains "<resource_name_path>" in resource_name field.
	// - Response for Update<Resource> contains "<resource_name_path>" in resource_name field.
	// - Response for Delete<Resource> does not specify anything.
	ResponsePaths *Action_OperatedResource_ObjectFieldPaths `protobuf:"bytes,6,opt,name=response_paths,json=responsePaths,proto3" json:"response_paths,omitempty"`
}

func (x *Action_OperatedResource) Reset() {
	*x = Action_OperatedResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_bootstrap_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_OperatedResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_OperatedResource) ProtoMessage() {}

func (x *Action_OperatedResource) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_bootstrap_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_OperatedResource.ProtoReflect.Descriptor instead.
func (*Action_OperatedResource) Descriptor() ([]byte, []int) {
	return file_goten_annotations_bootstrap_proto_rawDescGZIP(), []int{3, 3}
}

func (x *Action_OperatedResource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Action_OperatedResource) GetIsCollection() bool {
	if x != nil {
		return x.IsCollection
	}
	return false
}

func (x *Action_OperatedResource) GetIsPlural() bool {
	if x != nil {
		return x.IsPlural
	}
	return false
}

func (x *Action_OperatedResource) GetSkipResourceInRequest() bool {
	if x != nil {
		return x.SkipResourceInRequest
	}
	return false
}

func (x *Action_OperatedResource) GetRequestPaths() *Action_OperatedResource_ObjectFieldPaths {
	if x != nil {
		return x.RequestPaths
	}
	return nil
}

func (x *Action_OperatedResource) GetResponsePaths() *Action_OperatedResource_ObjectFieldPaths {
	if x != nil {
		return x.ResponsePaths
	}
	return nil
}

// GrpcTranscodingCustomizations customizes HTTP access by REST API.
// Normally it is generated by default, however developer may take control
// over some aspects.
type Action_GrpcTranscodingCustomizations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// HTTP method used for hinting HTTP transcoding, e.g. "post"
	HttpMethod string `protobuf:"bytes,1,opt,name=http_method,json=httpMethod,proto3" json:"http_method,omitempty"`
	// Controls whether :$verb is appended request path
	IsBasic bool `protobuf:"varint,2,opt,name=is_basic,json=isBasic,proto3" json:"is_basic,omitempty"`
	// Specifies api request body field path, set "*" to embed whole request message.
	HttpBodyField string `protobuf:"bytes,3,opt,name=http_body_field,json=httpBodyField,proto3" json:"http_body_field,omitempty"`
	// Full overrides for HTTP paths, for special use cases
	HttpPathOverrides []string `protobuf:"bytes,4,rep,name=http_path_overrides,json=httpPathOverrides,proto3" json:"http_path_overrides,omitempty"`
}

func (x *Action_GrpcTranscodingCustomizations) Reset() {
	*x = Action_GrpcTranscodingCustomizations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_bootstrap_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_GrpcTranscodingCustomizations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_GrpcTranscodingCustomizations) ProtoMessage() {}

func (x *Action_GrpcTranscodingCustomizations) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_bootstrap_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_GrpcTranscodingCustomizations.ProtoReflect.Descriptor instead.
func (*Action_GrpcTranscodingCustomizations) Descriptor() ([]byte, []int) {
	return file_goten_annotations_bootstrap_proto_rawDescGZIP(), []int{3, 4}
}

func (x *Action_GrpcTranscodingCustomizations) GetHttpMethod() string {
	if x != nil {
		return x.HttpMethod
	}
	return ""
}

func (x *Action_GrpcTranscodingCustomizations) GetIsBasic() bool {
	if x != nil {
		return x.IsBasic
	}
	return false
}

func (x *Action_GrpcTranscodingCustomizations) GetHttpBodyField() string {
	if x != nil {
		return x.HttpBodyField
	}
	return ""
}

func (x *Action_GrpcTranscodingCustomizations) GetHttpPathOverrides() []string {
	if x != nil {
		return x.HttpPathOverrides
	}
	return nil
}

// ObjectFieldPaths describes set of important field paths within request or
// response bodies, like path to resource name(s), collection, or body/bodies.
// Since request/responses may have one-ofs, it is possible to provide multiple
// field paths, however it is assumed only one path will be valid at a time.
type Action_OperatedResource_ObjectFieldPaths struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// All field paths pointing to resource name (or names for plural resource actions).
	ResourceName []string `protobuf:"bytes,1,rep,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	// All field paths pointing to resource body (or bodies for plural resource actions).
	// In certain circumstances, it may contain resource change bodies.
	ResourceBody []string `protobuf:"bytes,2,rep,name=resource_body,json=resourceBody,proto3" json:"resource_body,omitempty"`
	// All field paths pointing to resource collection. This field is valid only
	// for collection actions only.
	ResourceParent []string `protobuf:"bytes,3,rep,name=resource_parent,json=resourceParent,proto3" json:"resource_parent,omitempty"`
}

func (x *Action_OperatedResource_ObjectFieldPaths) Reset() {
	*x = Action_OperatedResource_ObjectFieldPaths{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_bootstrap_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_OperatedResource_ObjectFieldPaths) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_OperatedResource_ObjectFieldPaths) ProtoMessage() {}

func (x *Action_OperatedResource_ObjectFieldPaths) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_bootstrap_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_OperatedResource_ObjectFieldPaths.ProtoReflect.Descriptor instead.
func (*Action_OperatedResource_ObjectFieldPaths) Descriptor() ([]byte, []int) {
	return file_goten_annotations_bootstrap_proto_rawDescGZIP(), []int{3, 3, 0}
}

func (x *Action_OperatedResource_ObjectFieldPaths) GetResourceName() []string {
	if x != nil {
		return x.ResourceName
	}
	return nil
}

func (x *Action_OperatedResource_ObjectFieldPaths) GetResourceBody() []string {
	if x != nil {
		return x.ResourceBody
	}
	return nil
}

func (x *Action_OperatedResource_ObjectFieldPaths) GetResourceParent() []string {
	if x != nil {
		return x.ResourceParent
	}
	return nil
}

var File_goten_annotations_bootstrap_proto protoreflect.FileDescriptor

var file_goten_annotations_bootstrap_proto_rawDesc = []byte{
	0x0a, 0x21, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x73,
	0x74, 0x72, 0x61, 0x70, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xba, 0x06, 0x0a, 0x07,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x74,
	0x65, 0x6e, 0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x61, 0x70, 0x69, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x73,
	0x74, 0x72, 0x61, 0x70, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x04, 0x61, 0x70, 0x69, 0x73, 0x12, 0x4a,
	0x0a, 0x10, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e,
	0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x2e, 0x53, 0x63, 0x6f, 0x70, 0x65,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0f, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x1a, 0xe9, 0x03, 0x0a,
	0x05, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x40, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e,
	0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52,
	0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x6f, 0x74, 0x65,
	0x6e, 0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0xc1, 0x01, 0x0a, 0x07, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x6f, 0x5f, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x6f, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x69,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x1a, 0x97,
	0x01, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x48, 0x6f, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x53, 0x63,
	0x6f, 0x70, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x68, 0x74, 0x74, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0xc5, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x75,
	0x72, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x75, 0x72, 0x61,
	0x6c, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x64, 0x5f, 0x70, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x64, 0x50, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x31, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x62,
	0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x39, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x5f,
	0x69, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x6f, 0x74, 0x65,
	0x6e, 0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x73, 0x52, 0x06, 0x6f, 0x70, 0x74,
	0x49, 0x6e, 0x73, 0x12, 0x3c, 0x0a, 0x08, 0x6f, 0x70, 0x74, 0x5f, 0x6f, 0x75, 0x74, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x62, 0x6f,
	0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x4f, 0x70, 0x74, 0x4f, 0x75, 0x74, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x4f, 0x75, 0x74,
	0x73, 0x12, 0x4c, 0x0a, 0x0c, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e,
	0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53, 0x70,
	0x65, 0x63, 0x52, 0x0b, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12,
	0x44, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x62, 0x6f, 0x6f, 0x74,
	0x73, 0x74, 0x72, 0x61, 0x70, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x1a, 0xb2, 0x02, 0x0a, 0x0f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x12, 0x4f, 0x0a, 0x09, 0x73, 0x79, 0x6e,
	0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x67,
	0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x08, 0x73, 0x79, 0x6e, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x56, 0x0a, 0x29, 0x73, 0x6b,
	0x69, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x67, 0x65, 0x6e, 0x5f, 0x62, 0x61, 0x73, 0x65,
	0x64, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x23, 0x73,
	0x6b, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x47, 0x65, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x64, 0x52,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f,
	0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x22, 0x4c, 0x0a, 0x08,
	0x53, 0x79, 0x6e, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46, 0x41,
	0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x4c, 0x57, 0x41, 0x59, 0x53, 0x5f,
	0x49, 0x4e, 0x5f, 0x53, 0x43, 0x4f, 0x50, 0x45, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x4e, 0x45,
	0x56, 0x45, 0x52, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x4c, 0x57, 0x41, 0x59, 0x53, 0x5f,
	0x47, 0x4c, 0x4f, 0x42, 0x41, 0x4c, 0x4c, 0x59, 0x10, 0x03, 0x1a, 0xf8, 0x01, 0x0a, 0x0a, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x1f, 0x73,
	0x6b, 0x69, 0x70, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x73,
	0x5f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x1c, 0x73, 0x6b, 0x69, 0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x65, 0x72, 0x73, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x15, 0x73, 0x6b, 0x69, 0x70, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x21, 0x73, 0x6b,
	0x69, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x73, 0x6b, 0x69, 0x70, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f,
	0x72, 0x6d, 0x65, 0x72, 0x73, 0x1a, 0x8e, 0x02, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x4f, 0x75, 0x74,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12,
	0x27, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x72, 0x75, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64,
	0x43, 0x72, 0x75, 0x64, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x62,
	0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x64, 0x62, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74,
	0x73, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x69, 0x63, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x28, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65,
	0x22, 0x4c, 0x0a, 0x03, 0x41, 0x70, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xa5,
	0x0f, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x76, 0x65, 0x72, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x76, 0x65, 0x72,
	0x62, 0x12, 0x52, 0x0a, 0x10, 0x6f, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x6f,
	0x74, 0x65, 0x6e, 0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0e, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x14, 0x73, 0x6b, 0x69, 0x70,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x67, 0x65, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x73, 0x6b, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x47, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x31,
	0x0a, 0x15, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x6d, 0x73, 0x67, 0x5f, 0x67, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x73,
	0x6b, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x73, 0x67, 0x47, 0x65,
	0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d,
	0x0a, 0x12, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a,
	0x10, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x69, 0x6e,
	0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e,
	0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x47, 0x72, 0x70, 0x63, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f,
	0x67, 0x72, 0x70, 0x63, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12,
	0x53, 0x0a, 0x11, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x74,
	0x65, 0x6e, 0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x53,
	0x70, 0x65, 0x63, 0x52, 0x0f, 0x77, 0x69, 0x74, 0x68, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x12, 0x59, 0x0a, 0x14, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x73,
	0x74, 0x72, 0x61, 0x70, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x52, 0x12, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x42, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x62, 0x6f, 0x6f, 0x74,
	0x73, 0x74, 0x72, 0x61, 0x70, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x69, 0x6e, 0x67, 0x1a, 0xd0, 0x01, 0x0a, 0x0f, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x64, 0x4f,
	0x6e, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x4f,
	0x6e, 0x6c, 0x79, 0x12, 0x57, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e,
	0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x53, 0x70, 0x65,
	0x63, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x31, 0x0a, 0x0b,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x4e, 0x41, 0x50, 0x53, 0x48, 0x4f,
	0x54, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x10, 0x02, 0x42,
	0x15, 0x0a, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x1a, 0x99, 0x02, 0x0a, 0x0f, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x12, 0x3c, 0x0a, 0x1b, 0x73, 0x6b,
	0x69, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x67, 0x65, 0x6e, 0x5f, 0x62, 0x61, 0x73, 0x65,
	0x64, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x17, 0x73, 0x6b, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x47, 0x65, 0x6e, 0x42, 0x61, 0x73, 0x65,
	0x64, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x37, 0x0a, 0x18, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x5f, 0x6f, 0x6e, 0x5f, 0x6f, 0x77, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x4f, 0x6e, 0x4f, 0x77, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x12, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x61,
	0x74, 0x68, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x61, 0x74, 0x68, 0x73, 0x12,
	0x31, 0x0a, 0x15, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x61, 0x74,
	0x68, 0x73, 0x1a, 0x2e, 0x0a, 0x0a, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67,
	0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x1a, 0xeb, 0x03, 0x0a, 0x10, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x69,
	0x73, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70, 0x6c, 0x75, 0x72, 0x61, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x6c, 0x75, 0x72, 0x61, 0x6c, 0x12, 0x37, 0x0a,
	0x18, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x15, 0x73, 0x6b, 0x69, 0x70, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5e, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e,
	0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x50, 0x61, 0x74, 0x68, 0x73, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x50, 0x61, 0x74, 0x68, 0x73, 0x12, 0x60, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39,
	0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x50, 0x61, 0x74, 0x68, 0x73, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x50, 0x61, 0x74, 0x68, 0x73, 0x1a, 0x85, 0x01, 0x0a, 0x10, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x61, 0x74, 0x68, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x62,
	0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x1a, 0xb3, 0x01, 0x0a, 0x1d, 0x47, 0x72, 0x70, 0x63, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f,
	0x64, 0x69, 0x6e, 0x67, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x74, 0x74, 0x70, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x42, 0x61, 0x73, 0x69, 0x63, 0x12, 0x26,
	0x0a, 0x0f, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x68, 0x74, 0x74, 0x70, 0x42, 0x6f, 0x64,
	0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x11, 0x68, 0x74, 0x74, 0x70, 0x50, 0x61, 0x74, 0x68, 0x4f, 0x76, 0x65,
	0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x0e, 0x53, 0x63, 0x6f, 0x70, 0x65,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x6c, 0x75, 0x72, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x6c, 0x75, 0x72, 0x61, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x69, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x58, 0x0a, 0x23, 0x63,
	0x6f, 0x6d, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72,
	0x61, 0x70, 0x50, 0x01, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x77, 0x61, 0x6e, 0x2f, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x62, 0x6f, 0x6f, 0x74,
	0x73, 0x74, 0x72, 0x61, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_goten_annotations_bootstrap_proto_rawDescOnce sync.Once
	file_goten_annotations_bootstrap_proto_rawDescData = file_goten_annotations_bootstrap_proto_rawDesc
)

func file_goten_annotations_bootstrap_proto_rawDescGZIP() []byte {
	file_goten_annotations_bootstrap_proto_rawDescOnce.Do(func() {
		file_goten_annotations_bootstrap_proto_rawDescData = protoimpl.X.CompressGZIP(file_goten_annotations_bootstrap_proto_rawDescData)
	})
	return file_goten_annotations_bootstrap_proto_rawDescData
}

var file_goten_annotations_bootstrap_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_goten_annotations_bootstrap_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_goten_annotations_bootstrap_proto_goTypes = []interface{}{
	(Resource_MultiRegionSpec_SyncType)(0),           // 0: goten.bootstrap.Resource.MultiRegionSpec.SyncType
	(Action_StoreHandleSpec_Transaction)(0),          // 1: goten.bootstrap.Action.StoreHandleSpec.Transaction
	(*Service)(nil),                                  // 2: goten.bootstrap.Service
	(*Resource)(nil),                                 // 3: goten.bootstrap.Resource
	(*Api)(nil),                                      // 4: goten.bootstrap.Api
	(*Action)(nil),                                   // 5: goten.bootstrap.Action
	(*ScopeAttribute)(nil),                           // 6: goten.bootstrap.ScopeAttribute
	(*Service_Proto)(nil),                            // 7: goten.bootstrap.Service.Proto
	(*Service_Proto_Package)(nil),                    // 8: goten.bootstrap.Service.Proto.Package
	(*Service_Proto_Service)(nil),                    // 9: goten.bootstrap.Service.Proto.Service
	(*Resource_MultiRegionSpec)(nil),                 // 10: goten.bootstrap.Resource.MultiRegionSpec
	(*Resource_Versioning)(nil),                      // 11: goten.bootstrap.Resource.Versioning
	(*Resource_OptOuts)(nil),                         // 12: goten.bootstrap.Resource.OptOuts
	(*Resource_OptIns)(nil),                          // 13: goten.bootstrap.Resource.OptIns
	(*Action_StoreHandleSpec)(nil),                   // 14: goten.bootstrap.Action.StoreHandleSpec
	(*Action_MultiRegionSpec)(nil),                   // 15: goten.bootstrap.Action.MultiRegionSpec
	(*Action_Versioning)(nil),                        // 16: goten.bootstrap.Action.Versioning
	(*Action_OperatedResource)(nil),                  // 17: goten.bootstrap.Action.OperatedResource
	(*Action_GrpcTranscodingCustomizations)(nil),     // 18: goten.bootstrap.Action.GrpcTranscodingCustomizations
	(*Action_OperatedResource_ObjectFieldPaths)(nil), // 19: goten.bootstrap.Action.OperatedResource.ObjectFieldPaths
}
var file_goten_annotations_bootstrap_proto_depIdxs = []int32{
	7,  // 0: goten.bootstrap.Service.proto:type_name -> goten.bootstrap.Service.Proto
	3,  // 1: goten.bootstrap.Service.resources:type_name -> goten.bootstrap.Resource
	4,  // 2: goten.bootstrap.Service.apis:type_name -> goten.bootstrap.Api
	6,  // 3: goten.bootstrap.Service.scope_attributes:type_name -> goten.bootstrap.ScopeAttribute
	5,  // 4: goten.bootstrap.Resource.actions:type_name -> goten.bootstrap.Action
	13, // 5: goten.bootstrap.Resource.opt_ins:type_name -> goten.bootstrap.Resource.OptIns
	12, // 6: goten.bootstrap.Resource.opt_outs:type_name -> goten.bootstrap.Resource.OptOuts
	10, // 7: goten.bootstrap.Resource.multi_region:type_name -> goten.bootstrap.Resource.MultiRegionSpec
	11, // 8: goten.bootstrap.Resource.versioning:type_name -> goten.bootstrap.Resource.Versioning
	5,  // 9: goten.bootstrap.Api.actions:type_name -> goten.bootstrap.Action
	17, // 10: goten.bootstrap.Action.op_resource_info:type_name -> goten.bootstrap.Action.OperatedResource
	18, // 11: goten.bootstrap.Action.grpc_transcoding:type_name -> goten.bootstrap.Action.GrpcTranscodingCustomizations
	14, // 12: goten.bootstrap.Action.with_store_handle:type_name -> goten.bootstrap.Action.StoreHandleSpec
	15, // 13: goten.bootstrap.Action.multi_region_routing:type_name -> goten.bootstrap.Action.MultiRegionSpec
	16, // 14: goten.bootstrap.Action.versioning:type_name -> goten.bootstrap.Action.Versioning
	8,  // 15: goten.bootstrap.Service.Proto.package:type_name -> goten.bootstrap.Service.Proto.Package
	9,  // 16: goten.bootstrap.Service.Proto.service:type_name -> goten.bootstrap.Service.Proto.Service
	0,  // 17: goten.bootstrap.Resource.MultiRegionSpec.sync_type:type_name -> goten.bootstrap.Resource.MultiRegionSpec.SyncType
	1,  // 18: goten.bootstrap.Action.StoreHandleSpec.transaction:type_name -> goten.bootstrap.Action.StoreHandleSpec.Transaction
	19, // 19: goten.bootstrap.Action.OperatedResource.request_paths:type_name -> goten.bootstrap.Action.OperatedResource.ObjectFieldPaths
	19, // 20: goten.bootstrap.Action.OperatedResource.response_paths:type_name -> goten.bootstrap.Action.OperatedResource.ObjectFieldPaths
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_goten_annotations_bootstrap_proto_init() }
func file_goten_annotations_bootstrap_proto_init() {
	if File_goten_annotations_bootstrap_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_goten_annotations_bootstrap_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_bootstrap_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_bootstrap_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Api); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_bootstrap_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_bootstrap_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScopeAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_bootstrap_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service_Proto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_bootstrap_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service_Proto_Package); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_bootstrap_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service_Proto_Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_bootstrap_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource_MultiRegionSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_bootstrap_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource_Versioning); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_bootstrap_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource_OptOuts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_bootstrap_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource_OptIns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_bootstrap_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action_StoreHandleSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_bootstrap_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action_MultiRegionSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_bootstrap_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action_Versioning); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_bootstrap_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action_OperatedResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_bootstrap_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action_GrpcTranscodingCustomizations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_bootstrap_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action_OperatedResource_ObjectFieldPaths); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_goten_annotations_bootstrap_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*Action_StoreHandleSpec_Transaction_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_goten_annotations_bootstrap_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_goten_annotations_bootstrap_proto_goTypes,
		DependencyIndexes: file_goten_annotations_bootstrap_proto_depIdxs,
		EnumInfos:         file_goten_annotations_bootstrap_proto_enumTypes,
		MessageInfos:      file_goten_annotations_bootstrap_proto_msgTypes,
	}.Build()
	File_goten_annotations_bootstrap_proto = out.File
	file_goten_annotations_bootstrap_proto_rawDesc = nil
	file_goten_annotations_bootstrap_proto_goTypes = nil
	file_goten_annotations_bootstrap_proto_depIdxs = nil
}
