syntax = "proto3";

package goten.annotations;

import "google/protobuf/descriptor.proto";
import "goten/annotations/goten.proto";

option go_package = "github.com/cloudwan/goten-sdk/annotations/service";
option java_multiple_files = true;
option java_outer_classname = "GotenProtoService";
option java_package = "com.ntt.goten.annotations.service";

// Method contains meta-information about RPC method like what type of resource it works on,
// whether it operates on single instance, set or whole collection. It informs what are the
// field paths to resource name, body or collection. It also influences generated method descriptor
// and associated request/response handlers.
// This object is generated by goten-bootstrap tool based on action (bootstrap) parameters.
message Method {
  // resource name
  string resource = 1;

  // Action verb
  string verb = 2;

  // whether method operates on resource collection. This generally includes
  // methods like List or Search (all those with "parent" field). It also
  // contains Create methods, as act of creation concerns whole collection
  // (like checking for uniqueness). It does not include batch versions
  // of single-resource actions (like batch get).
  bool is_collection = 3;

  // whether method operates on multiple instances of resource - List, Search,
  // BatchGet...
  bool is_plural = 4;

  // List of interesting field paths in request object
  ObjectFieldPaths request_paths = 5;

  // List of interesting field paths in response object
  ObjectFieldPaths response_paths = 6;

  message ObjectFieldPaths {
    // All field paths pointing to resource name (or names for plural resource actions).
    repeated string resource_name = 1;

    // All field paths pointing to resource body (or bodies for plural resource actions).
    // In certain circumstances, it may contain resource change bodies.
    repeated string resource_body = 2;

    // All field paths pointing to resource collection. This field is valid only
    // for collection actions only.
    repeated string resource_parent = 3;
  }
}

// Goten service package is a bundle of resources and RPC services that binds
// everything together. It is an extension of proto package -> Proto package can
// have only one instance of ServicePackage defined. All resources and RPC
// services found within proto package are assigned automatically to this
// ServicePackage.
message ServicePackage {
  // Simple service name, for example IAM, Devices, etc.
  string name = 1;

  // Service name, for example library.goten.com
  string domain = 2;

  // Current version of the service
  string version = 3;

  // Name of a proto package which contains newer version of current
  // ServicePackage
  string next_version_pkg = 4;

  // All imported service packages. For example, library.goten.com may require
  // book.registry.goten.com.
  repeated SvcImport imported_services = 5;

  // If multi-region support is disabled
  bool disable_multi_region = 6;

  // SvcImport describes imported service
  message SvcImport {
    // Service domain, for example library.goten.com
    string domain = 1;

    // Proto package where service is defined
    string proto_pkg = 2;

    // Version of the service
    string version = 3;
  }
}

extend google.protobuf.MethodOptions {
  Method method = 69040;
}

extend google.protobuf.FileOptions {
  // Placement for server side Go packages
  GoPackage server_go_package = 690160;

  // Placement for client side Go packages
  GoPackage client_go_package = 690161;

  // Placement for versioning Go packages (if any)
  GoPackage versioning_go_package = 690370;

  // Placement for API Access related Go packages
  GoPackage access_go_package = 690180;

  // Package for CLI related Go packages
  GoPackage cli_go_package = 690120;

  // Package for Store Access related Go packages
  GoPackage store_go_package = 690170;

  // Specification of a ServicePackage. This option can be defined only once in
  // one file within whole proto package. It must be defined if proto package
  // describes goten service.
  ServicePackage service_pkg = 690162;
}
