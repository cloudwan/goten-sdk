// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1-devel
// 	protoc        v4.25.2
// source: goten/annotations/multi_region.proto

package multi_region

import (
	_ "github.com/cloudwan/goten-sdk/annotations/goten"
	_ "github.com/cloudwan/goten-sdk/annotations/resource"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SyncingOpts_Type int32

const (
	// DEFAULT indicates, that resource is synced according to policy and its
	// rules if it is a subject of policy. Otherwise, it is synced always to all
	// possible regions (ALWAYS_GLOBALLY).
	SyncingOpts_DEFAULT SyncingOpts_Type = 0
	// ALWAYS_IN_SCOPE indicates that resource is always synced across all regions according
	// to MultiRegionPolicy of the parent (enabled regions). If resource is not
	// subject to MultiRegionPolicy, it is synced to all regions globally (same as
	// ALWAYS_GLOBALLY).
	SyncingOpts_ALWAYS_IN_SCOPE SyncingOpts_Type = 1
	// NEVER indicates that resource never is synced outside its owning region.
	// Only resources that are subject to policies can be never synced.
	SyncingOpts_NEVER SyncingOpts_Type = 2
	// ALWAYS_GLOBALLY indicates that resource ignores MultiRegionPolicy of parent
	// and is synced always globally, to all regions supported by service.
	SyncingOpts_ALWAYS_GLOBALLY SyncingOpts_Type = 3
)

// Enum value maps for SyncingOpts_Type.
var (
	SyncingOpts_Type_name = map[int32]string{
		0: "DEFAULT",
		1: "ALWAYS_IN_SCOPE",
		2: "NEVER",
		3: "ALWAYS_GLOBALLY",
	}
	SyncingOpts_Type_value = map[string]int32{
		"DEFAULT":         0,
		"ALWAYS_IN_SCOPE": 1,
		"NEVER":           2,
		"ALWAYS_GLOBALLY": 3,
	}
)

func (x SyncingOpts_Type) Enum() *SyncingOpts_Type {
	p := new(SyncingOpts_Type)
	*p = x
	return p
}

func (x SyncingOpts_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SyncingOpts_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_goten_annotations_multi_region_proto_enumTypes[0].Descriptor()
}

func (SyncingOpts_Type) Type() protoreflect.EnumType {
	return &file_goten_annotations_multi_region_proto_enumTypes[0]
}

func (x SyncingOpts_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SyncingOpts_Type.Descriptor instead.
func (SyncingOpts_Type) EnumDescriptor() ([]byte, []int) {
	return file_goten_annotations_multi_region_proto_rawDescGZIP(), []int{1, 0}
}

// Region is a scope attribute annotation that should be added to each resource
// that is supposed to be regional. With this, goten will add region segment to
// the owning resource each name pattern.
type Region struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Region) Reset() {
	*x = Region{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_multi_region_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Region) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Region) ProtoMessage() {}

func (x *Region) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_multi_region_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Region.ProtoReflect.Descriptor instead.
func (*Region) Descriptor() ([]byte, []int) {
	return file_goten_annotations_multi_region_proto_rawDescGZIP(), []int{0}
}

// SyncingOpts is attachable to goten resource and carries additional
// information how resource is synced across regions.
type SyncingOpts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Synchronization type indicates where resources of given type are synced.
	Type SyncingOpts_Type `protobuf:"varint,1,opt,name=type,proto3,enum=goten.annotations.SyncingOpts_Type" json:"type,omitempty"`
}

func (x *SyncingOpts) Reset() {
	*x = SyncingOpts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_multi_region_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncingOpts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncingOpts) ProtoMessage() {}

func (x *SyncingOpts) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_multi_region_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncingOpts.ProtoReflect.Descriptor instead.
func (*SyncingOpts) Descriptor() ([]byte, []int) {
	return file_goten_annotations_multi_region_proto_rawDescGZIP(), []int{1}
}

func (x *SyncingOpts) GetType() SyncingOpts_Type {
	if x != nil {
		return x.Type
	}
	return SyncingOpts_DEFAULT
}

// RoutingSpec is attachable to method and provides routing information for it.
// It is generally generated by bootstrap based on api skeleton code.
type RoutingSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If true, goten will omit multi-region code-generation for given method. It
	// can be used when its known that method does not need to be routed or if
	// developer needs to write custom code manually.
	// If this option is set, other fields are ignored.
	SkipCodeGenBasedRouting bool `protobuf:"varint,1,opt,name=skip_code_gen_based_routing,json=skipCodeGenBasedRouting,proto3" json:"skip_code_gen_based_routing,omitempty"`
	// Informs goten code-gen that given method can only be executed on region
	// owning resource on each method operates. Its typically used for write requests.
	ExecuteOnOwningRegion bool `protobuf:"varint,2,opt,name=execute_on_owning_region,json=executeOnOwningRegion,proto3" json:"execute_on_owning_region,omitempty"`
	// List of field paths in a request containing resource scope - reference
	// to resource which contains multi-region Policy object in its schema.
	// Routing mechanisms gets scoping resource, extracts Policy object and
	// having it, makes decision whether request can be executed locally, or
	// whether it should be routed somewhere else, or maybe if it should be
	// splitted across many regions.
	// This field is used only for methods operating on collection of
	// resources and if region_id_field_paths is not provided (has higher
	// priority).
	// If not provided, then Goten will look into request_paths annotation
	// in the method protobuf definition. If this is missing and defaults
	// cannot be deduced, error will be raised.
	// Because request can use oneof and contain many potential field
	// paths, this field is an array. However, routing mechanism picks only
	// first populated value.
	ScopeFieldPaths []string `protobuf:"bytes,3,rep,name=scope_field_paths,json=scopeFieldPaths,proto3" json:"scope_field_paths,omitempty"`
	// List of field paths in a request which contain reference/name to a resource
	// on which method operates. Routing mechanisms determines what is the
	// ancestor holding multi-region Policy for given reference (if exists) and
	// eventually determines if request should be routed or executed locally.
	// This field is used only for methods operating on single resources and if
	// region_id_field_paths is not provided (has higher priority).
	// If not provided, then Goten will look into request_paths annotation
	// in the method protobuf definition. If this is missing and defaults
	// cannot be deduced, error will be raised.
	// Because request can use oneof and contain many potential field
	// paths, this field is an array. However, routing mechanism picks only
	// first populated value.
	ResourceFieldPaths []string `protobuf:"bytes,4,rep,name=resource_field_paths,json=resourceFieldPaths,proto3" json:"resource_field_paths,omitempty"`
	// List of field paths in a request containing exact region ID where
	// request should be routed. This mechanism can be used if routing cannot
	// be decided easier using scope or resource name/ref, but should be generally
	// avoided.
	RegionIdFieldPaths []string `protobuf:"bytes,5,rep,name=region_id_field_paths,json=regionIdFieldPaths,proto3" json:"region_id_field_paths,omitempty"`
}

func (x *RoutingSpec) Reset() {
	*x = RoutingSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_multi_region_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutingSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutingSpec) ProtoMessage() {}

func (x *RoutingSpec) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_multi_region_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutingSpec.ProtoReflect.Descriptor instead.
func (*RoutingSpec) Descriptor() ([]byte, []int) {
	return file_goten_annotations_multi_region_proto_rawDescGZIP(), []int{2}
}

func (x *RoutingSpec) GetSkipCodeGenBasedRouting() bool {
	if x != nil {
		return x.SkipCodeGenBasedRouting
	}
	return false
}

func (x *RoutingSpec) GetExecuteOnOwningRegion() bool {
	if x != nil {
		return x.ExecuteOnOwningRegion
	}
	return false
}

func (x *RoutingSpec) GetScopeFieldPaths() []string {
	if x != nil {
		return x.ScopeFieldPaths
	}
	return nil
}

func (x *RoutingSpec) GetResourceFieldPaths() []string {
	if x != nil {
		return x.ResourceFieldPaths
	}
	return nil
}

func (x *RoutingSpec) GetRegionIdFieldPaths() []string {
	if x != nil {
		return x.RegionIdFieldPaths
	}
	return nil
}

var file_goten_annotations_multi_region_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*RoutingSpec)(nil),
		Field:         79041,
		Name:          "goten.annotations.multi_region_routing",
		Tag:           "bytes,79041,opt,name=multi_region_routing",
		Filename:      "goten/annotations/multi_region.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*SyncingOpts)(nil),
		Field:         69100,
		Name:          "goten.annotations.syncing_opts",
		Tag:           "bytes,69100,opt,name=syncing_opts",
		Filename:      "goten/annotations/multi_region.proto",
	},
}

// Extension fields to descriptorpb.MethodOptions.
var (
	// Routing specification for this method.
	//
	// optional goten.annotations.RoutingSpec multi_region_routing = 79041;
	E_MultiRegionRouting = &file_goten_annotations_multi_region_proto_extTypes[0]
)

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional goten.annotations.SyncingOpts syncing_opts = 69100;
	E_SyncingOpts = &file_goten_annotations_multi_region_proto_extTypes[1]
)

var File_goten_annotations_multi_region_proto protoreflect.FileDescriptor

var file_goten_annotations_multi_region_proto_rawDesc = []byte{
	0x0a, 0x24, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x67, 0x6f, 0x74,
	0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67,
	0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x74, 0x65,
	0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x36, 0x0a, 0x06,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x3a, 0x2c, 0xa2, 0xd9, 0x21, 0x28, 0x0a, 0x07, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x5b, 0x61, 0x2d, 0x7a, 0x5d, 0x5b, 0x61, 0x2d, 0x7a,
	0x30, 0x2d, 0x39, 0x5c, 0x2d, 0x5d, 0x7b, 0x30, 0x2c, 0x32, 0x38, 0x7d, 0x5b, 0x61, 0x2d, 0x7a,
	0x30, 0x2d, 0x39, 0x5d, 0x22, 0x90, 0x01, 0x0a, 0x0b, 0x53, 0x79, 0x6e, 0x63, 0x69, 0x6e, 0x67,
	0x4f, 0x70, 0x74, 0x73, 0x12, 0x37, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x23, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x4f, 0x70,
	0x74, 0x73, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x48, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54,
	0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x4c, 0x57, 0x41, 0x59, 0x53, 0x5f, 0x49, 0x4e, 0x5f,
	0x53, 0x43, 0x4f, 0x50, 0x45, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x4e, 0x45, 0x56, 0x45, 0x52,
	0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x4c, 0x57, 0x41, 0x59, 0x53, 0x5f, 0x47, 0x4c, 0x4f,
	0x42, 0x41, 0x4c, 0x4c, 0x59, 0x10, 0x03, 0x22, 0x95, 0x02, 0x0a, 0x0b, 0x52, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x67, 0x53, 0x70, 0x65, 0x63, 0x12, 0x3c, 0x0a, 0x1b, 0x73, 0x6b, 0x69, 0x70, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x5f, 0x67, 0x65, 0x6e, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x64, 0x5f, 0x72,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x73, 0x6b,
	0x69, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x47, 0x65, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x64, 0x52, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x37, 0x0a, 0x18, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x5f, 0x6f, 0x6e, 0x5f, 0x6f, 0x77, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x4f, 0x6e, 0x4f, 0x77, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x2a,
	0x0a, 0x11, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x61, 0x74, 0x68, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x61, 0x74, 0x68, 0x73, 0x12, 0x31, 0x0a, 0x15,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x61, 0x74, 0x68, 0x73, 0x3a,
	0x72, 0x0a, 0x14, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xc1, 0xe9, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x70, 0x65, 0x63, 0x52,
	0x12, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x67, 0x3a, 0x64, 0x0a, 0x0c, 0x73, 0x79, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x5f, 0x6f,
	0x70, 0x74, 0x73, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0xec, 0x9b, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67,
	0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x53, 0x79, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x73, 0x52, 0x0b, 0x73, 0x79,
	0x6e, 0x63, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x73, 0x42, 0x75, 0x0a, 0x26, 0x63, 0x6f, 0x6d,
	0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x42, 0x15, 0x47, 0x6f, 0x74, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x50, 0x01, 0x5a, 0x32, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x77, 0x61,
	0x6e, 0x2f, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_goten_annotations_multi_region_proto_rawDescOnce sync.Once
	file_goten_annotations_multi_region_proto_rawDescData = file_goten_annotations_multi_region_proto_rawDesc
)

func file_goten_annotations_multi_region_proto_rawDescGZIP() []byte {
	file_goten_annotations_multi_region_proto_rawDescOnce.Do(func() {
		file_goten_annotations_multi_region_proto_rawDescData = protoimpl.X.CompressGZIP(file_goten_annotations_multi_region_proto_rawDescData)
	})
	return file_goten_annotations_multi_region_proto_rawDescData
}

var file_goten_annotations_multi_region_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_goten_annotations_multi_region_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_goten_annotations_multi_region_proto_goTypes = []any{
	(SyncingOpts_Type)(0),               // 0: goten.annotations.SyncingOpts.Type
	(*Region)(nil),                      // 1: goten.annotations.Region
	(*SyncingOpts)(nil),                 // 2: goten.annotations.SyncingOpts
	(*RoutingSpec)(nil),                 // 3: goten.annotations.RoutingSpec
	(*descriptorpb.MethodOptions)(nil),  // 4: google.protobuf.MethodOptions
	(*descriptorpb.MessageOptions)(nil), // 5: google.protobuf.MessageOptions
}
var file_goten_annotations_multi_region_proto_depIdxs = []int32{
	0, // 0: goten.annotations.SyncingOpts.type:type_name -> goten.annotations.SyncingOpts.Type
	4, // 1: goten.annotations.multi_region_routing:extendee -> google.protobuf.MethodOptions
	5, // 2: goten.annotations.syncing_opts:extendee -> google.protobuf.MessageOptions
	3, // 3: goten.annotations.multi_region_routing:type_name -> goten.annotations.RoutingSpec
	2, // 4: goten.annotations.syncing_opts:type_name -> goten.annotations.SyncingOpts
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	3, // [3:5] is the sub-list for extension type_name
	1, // [1:3] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_goten_annotations_multi_region_proto_init() }
func file_goten_annotations_multi_region_proto_init() {
	if File_goten_annotations_multi_region_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_goten_annotations_multi_region_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Region); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_multi_region_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SyncingOpts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_multi_region_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*RoutingSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_goten_annotations_multi_region_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 2,
			NumServices:   0,
		},
		GoTypes:           file_goten_annotations_multi_region_proto_goTypes,
		DependencyIndexes: file_goten_annotations_multi_region_proto_depIdxs,
		EnumInfos:         file_goten_annotations_multi_region_proto_enumTypes,
		MessageInfos:      file_goten_annotations_multi_region_proto_msgTypes,
		ExtensionInfos:    file_goten_annotations_multi_region_proto_extTypes,
	}.Build()
	File_goten_annotations_multi_region_proto = out.File
	file_goten_annotations_multi_region_proto_rawDesc = nil
	file_goten_annotations_multi_region_proto_goTypes = nil
	file_goten_annotations_multi_region_proto_depIdxs = nil
}
