// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v4.25.2
// source: goten/annotations/resource.proto

package resource

import (
	goten "github.com/cloudwan/goten-sdk/annotations/goten"
	view "github.com/cloudwan/goten-sdk/types/view"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ViewSpec associates View with list of fields available
// in resource obtained from server.
type ViewSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Type of view
	View view.View `protobuf:"varint,1,opt,name=view,proto3,enum=goten.types.View" json:"view,omitempty"`
	// List of fields associated with view type
	Fields []*ViewSpec_Field `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *ViewSpec) Reset() {
	*x = ViewSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_resource_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewSpec) ProtoMessage() {}

func (x *ViewSpec) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_resource_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewSpec.ProtoReflect.Descriptor instead.
func (*ViewSpec) Descriptor() ([]byte, []int) {
	return file_goten_annotations_resource_proto_rawDescGZIP(), []int{0}
}

func (x *ViewSpec) GetView() view.View {
	if x != nil {
		return x.View
	}
	return view.View(0)
}

func (x *ViewSpec) GetFields() []*ViewSpec_Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

type PagerSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// whether to skip default pager implementation
	IsDisabled      bool  `protobuf:"varint,1,opt,name=is_disabled,json=isDisabled,proto3" json:"is_disabled,omitempty"`
	DefaultPageSize int32 `protobuf:"varint,2,opt,name=default_page_size,json=defaultPageSize,proto3" json:"default_page_size,omitempty"`
	MaxPageSize     int32 `protobuf:"varint,3,opt,name=max_page_size,json=maxPageSize,proto3" json:"max_page_size,omitempty"`
}

func (x *PagerSpec) Reset() {
	*x = PagerSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_resource_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagerSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagerSpec) ProtoMessage() {}

func (x *PagerSpec) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_resource_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagerSpec.ProtoReflect.Descriptor instead.
func (*PagerSpec) Descriptor() ([]byte, []int) {
	return file_goten_annotations_resource_proto_rawDescGZIP(), []int{1}
}

func (x *PagerSpec) GetIsDisabled() bool {
	if x != nil {
		return x.IsDisabled
	}
	return false
}

func (x *PagerSpec) GetDefaultPageSize() int32 {
	if x != nil {
		return x.DefaultPageSize
	}
	return 0
}

func (x *PagerSpec) GetMaxPageSize() int32 {
	if x != nil {
		return x.MaxPageSize
	}
	return 0
}

// ScopeAttributeSpec describes optional attribute (variable) that can be attached to resource name as part of the
// scope. This allows injecting important information into resource name that is neither name of the parent resource
// (if any) or ID of the resource itself. Goten comes with one spec attribute: Region. During code generation,
// goten will insert given attributes into resource name patterns.
type ScopeAttributeSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// plural noun for this attribute.
	Plural string `protobuf:"bytes,1,opt,name=plural,proto3" json:"plural,omitempty"`
	// scope attribute id pattern. If not present, [a-z][a-z0-9\-]{0,28}[a-z0-9] is assumed.
	IdPattern string `protobuf:"bytes,2,opt,name=id_pattern,json=idPattern,proto3" json:"id_pattern,omitempty"`
	// Information whether this attribute is optional or not. If optional, then number of name patters for
	// given resource is doubled.
	Optional bool `protobuf:"varint,3,opt,name=optional,proto3" json:"optional,omitempty"`
}

func (x *ScopeAttributeSpec) Reset() {
	*x = ScopeAttributeSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_resource_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScopeAttributeSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScopeAttributeSpec) ProtoMessage() {}

func (x *ScopeAttributeSpec) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_resource_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScopeAttributeSpec.ProtoReflect.Descriptor instead.
func (*ScopeAttributeSpec) Descriptor() ([]byte, []int) {
	return file_goten_annotations_resource_proto_rawDescGZIP(), []int{2}
}

func (x *ScopeAttributeSpec) GetPlural() string {
	if x != nil {
		return x.Plural
	}
	return ""
}

func (x *ScopeAttributeSpec) GetIdPattern() string {
	if x != nil {
		return x.IdPattern
	}
	return ""
}

func (x *ScopeAttributeSpec) GetOptional() bool {
	if x != nil {
		return x.Optional
	}
	return false
}

// Description of Resource that is served through REST
type ResourceSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// plural form of resource noun, e.g. shelf -> shelves. Defaults to resource
	// name + "s"
	Plural string `protobuf:"bytes,1,opt,name=plural,proto3" json:"plural,omitempty"`
	// database table or collection used for storing DB records. Defaults to
	// plural form.
	Collection string `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	// List of possible parent resource names, e.g. "Shelf". If no parents are given, then resource
	// cannot have any parents. If one of the parents is "goten.ntt.com/None", then resource may or
	// may not have a parent. Parents are forming initial part of the resource name pattern -
	// each parent is adding patters in parallel - one of them is active at the moment.
	// If resource parent is in foreign proto package, then proto package should be followed by
	// slash and resource name, for example: ntt.iam.v1alpha/Project
	Parents []string `protobuf:"bytes,3,rep,name=parents,proto3" json:"parents,omitempty"`
	// Additional, optional attributes injected into resource name and which form "parent name" after name derived from
	// ancestral resource (if is present). Resource name can have many attributes and they are connected in series, in the
	// order defined in resource schema. For example, suppose we defined following attribute:
	//
	//	{
	//	  plural: "Regions"
	//	  optional: false
	//	}
	//
	// Then if we define following spec for resource "Invitation":
	//
	//	{
	//	  plural: "Invitations"
	//	  parents: "Project"
	//	  parents: "Organization"
	//	  scope_attributes: "Region"
	//	}
	//
	// then following name patterns will be generated:
	// * projects/{project_id}/regions/{region_id}/invitations/{invitation_id}
	// * organizations/{organization_id}/regions/{region_id}/invitations/{invitation_id}
	//
	// For given example, there must be defined "message Region" with defined option
	// ScopeAttributeSpec. Just like in case of resource parents, messages from foreign proto
	// packages must be prepended with proto package name and slash.
	ScopeAttributes []string `protobuf:"bytes,4,rep,name=scope_attributes,json=scopeAttributes,proto3" json:"scope_attributes,omitempty"`
	// name segment id pattern. If not present,
	// [a-zA-Z0-9_.-]{1,128} is assumed (migrating to creation_id_pattern)
	IdPattern string `protobuf:"bytes,5,opt,name=id_pattern,json=idPattern,proto3" json:"id_pattern,omitempty"`
	// Name segment ID pattern used when validating creation of new resource.
	// It is supposed to replace id_pattern in the future.
	// If not present and id_pattern is not default one, then its same as id_pattern.
	// Otherwise, [a-z][a-z0-9\-]{0,28}[a-z0-9] is assumed.
	// It is important that id_pattern with backward compatibility also conforms
	// to this new creation_id_pattern. If necessary, then you should modify
	// id_pattern so it can match old and new names.
	CreationIdPattern string `protobuf:"bytes,6,opt,name=creation_id_pattern,json=creationIdPattern,proto3" json:"creation_id_pattern,omitempty"`
	// Defines behaviour of resource when parent is deleted
	// UNSET in this field is not allowed.
	OnParentDeletedBehavior goten.OnReferencedObjectDeleted `protobuf:"varint,7,opt,name=on_parent_deleted_behavior,json=onParentDeletedBehavior,proto3,enum=goten.annotations.OnReferencedObjectDeleted" json:"on_parent_deleted_behavior,omitempty"`
	// List of defined views for the resource - you can define views
	// for BASIC, DETAIL and NAME - however NAME also is provided by
	// goten automatically if you dont provide yours. Automatic NAME
	// view contains name field (see name_field) and display_name (if
	// present in the list of fields).
	Views []*ViewSpec `protobuf:"bytes,8,rep,name=views,proto3" json:"views,omitempty"`
	// If true, it means standard Access (Store and API) are not used
	// for this resource.
	DisableStandardAccess bool `protobuf:"varint,9,opt,name=disable_standard_access,json=disableStandardAccess,proto3" json:"disable_standard_access,omitempty"`
	// Pager spec for List/Watch collection methods
	Pager *PagerSpec `protobuf:"bytes,10,opt,name=pager,proto3" json:"pager,omitempty"`
	// If true, then deletion of this resource is not a single event, but
	// a process involving special cleanup process - usually asynchronous
	// set cascade deletion / unset operations for all referencing resources.
	// User will be still able to see resource with GET/LIST/WATCH operations
	// after sending DELETE. Only once all triggered functions are complete,
	// resource will be truly deleted in asynchronous manner.
	//
	// This option must not be used if resource has references with cascade
	// deletion handler!
	//
	// Deletion process is implemented on store, (not server) layer:
	// * Store.Delete(ctx, reference) causes resource to be moved to deleting
	// state - and all store plugins will be notified via OnUpdate handler.
	// * Despite deletion being de facto update, system will pick up deleting
	// status and start cleaning up all dependencies. Once done, it will
	// delete the resource and all store plugins will be notified via
	// OnDeleted handler.
	AsyncDeletion bool `protobuf:"varint,11,opt,name=async_deletion,json=asyncDeletion,proto3" json:"async_deletion,omitempty"`
	// If true, resource type will not be subject to database constraints:
	//   - References FROM this resource will not be actually checked for existence.
	//     Nor their effects (Blocking, cascade delete...) will work.
	//   - References TO this resource type will also not block, cascade delete etc.
	//   - Resources of this type will not be garbage-collected by db-controller.
	//
	// Resource shadow instances (from schema-mixin service) will not be created.
	// This flag should be used only for resources that are not accessible to users
	// (in writing mode at least). Suitable for some internal types.
	DisableDbConstraints bool `protobuf:"varint,12,opt,name=disable_db_constraints,json=disableDbConstraints,proto3" json:"disable_db_constraints,omitempty"`
}

func (x *ResourceSpec) Reset() {
	*x = ResourceSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_resource_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceSpec) ProtoMessage() {}

func (x *ResourceSpec) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_resource_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceSpec.ProtoReflect.Descriptor instead.
func (*ResourceSpec) Descriptor() ([]byte, []int) {
	return file_goten_annotations_resource_proto_rawDescGZIP(), []int{3}
}

func (x *ResourceSpec) GetPlural() string {
	if x != nil {
		return x.Plural
	}
	return ""
}

func (x *ResourceSpec) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *ResourceSpec) GetParents() []string {
	if x != nil {
		return x.Parents
	}
	return nil
}

func (x *ResourceSpec) GetScopeAttributes() []string {
	if x != nil {
		return x.ScopeAttributes
	}
	return nil
}

func (x *ResourceSpec) GetIdPattern() string {
	if x != nil {
		return x.IdPattern
	}
	return ""
}

func (x *ResourceSpec) GetCreationIdPattern() string {
	if x != nil {
		return x.CreationIdPattern
	}
	return ""
}

func (x *ResourceSpec) GetOnParentDeletedBehavior() goten.OnReferencedObjectDeleted {
	if x != nil {
		return x.OnParentDeletedBehavior
	}
	return goten.OnReferencedObjectDeleted(0)
}

func (x *ResourceSpec) GetViews() []*ViewSpec {
	if x != nil {
		return x.Views
	}
	return nil
}

func (x *ResourceSpec) GetDisableStandardAccess() bool {
	if x != nil {
		return x.DisableStandardAccess
	}
	return false
}

func (x *ResourceSpec) GetPager() *PagerSpec {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *ResourceSpec) GetAsyncDeletion() bool {
	if x != nil {
		return x.AsyncDeletion
	}
	return false
}

func (x *ResourceSpec) GetDisableDbConstraints() bool {
	if x != nil {
		return x.DisableDbConstraints
	}
	return false
}

// SearchSpec describes Resource annotations for Search engine, which can be optionally configured along Store.
type SearchSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of field paths (object or strings) by which resources should be searchable.
	// By putting fields here we are also instructing search engine that fields should
	// be filterable.
	FullySearchable []string `protobuf:"bytes,1,rep,name=fully_searchable,json=fullySearchable,proto3" json:"fully_searchable,omitempty"`
	// List of field paths which should be filterable by search engine.
	FilterableOnly []string `protobuf:"bytes,2,rep,name=filterable_only,json=filterableOnly,proto3" json:"filterable_only,omitempty"`
	// List of field paths by which sorting should be possible (for both directions).
	Sortable []string `protobuf:"bytes,3,rep,name=sortable,proto3" json:"sortable,omitempty"`
}

func (x *SearchSpec) Reset() {
	*x = SearchSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_resource_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSpec) ProtoMessage() {}

func (x *SearchSpec) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_resource_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSpec.ProtoReflect.Descriptor instead.
func (*SearchSpec) Descriptor() ([]byte, []int) {
	return file_goten_annotations_resource_proto_rawDescGZIP(), []int{4}
}

func (x *SearchSpec) GetFullySearchable() []string {
	if x != nil {
		return x.FullySearchable
	}
	return nil
}

func (x *SearchSpec) GetFilterableOnly() []string {
	if x != nil {
		return x.FilterableOnly
	}
	return nil
}

func (x *SearchSpec) GetSortable() []string {
	if x != nil {
		return x.Sortable
	}
	return nil
}

// Marks resource change type used in Watch implementation
type ResourceChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource string `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *ResourceChange) Reset() {
	*x = ResourceChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_resource_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceChange) ProtoMessage() {}

func (x *ResourceChange) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_resource_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceChange.ProtoReflect.Descriptor instead.
func (*ResourceChange) Descriptor() ([]byte, []int) {
	return file_goten_annotations_resource_proto_rawDescGZIP(), []int{5}
}

func (x *ResourceChange) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

// Field describes single field - path to the field
// and (optional!) display name (usable for clients)
type ViewSpec_Field struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path        string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
}

func (x *ViewSpec_Field) Reset() {
	*x = ViewSpec_Field{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_resource_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewSpec_Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewSpec_Field) ProtoMessage() {}

func (x *ViewSpec_Field) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_resource_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewSpec_Field.ProtoReflect.Descriptor instead.
func (*ViewSpec_Field) Descriptor() ([]byte, []int) {
	return file_goten_annotations_resource_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ViewSpec_Field) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ViewSpec_Field) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

var file_goten_annotations_resource_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*ResourceSpec)(nil),
		Field:         69010,
		Name:          "goten.annotations.resource",
		Tag:           "bytes,69010,opt,name=resource",
		Filename:      "goten/annotations/resource.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*ResourceChange)(nil),
		Field:         69011,
		Name:          "goten.annotations.resource_change",
		Tag:           "bytes,69011,opt,name=resource_change",
		Filename:      "goten/annotations/resource.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*ScopeAttributeSpec)(nil),
		Field:         69012,
		Name:          "goten.annotations.scope_attribute",
		Tag:           "bytes,69012,opt,name=scope_attribute",
		Filename:      "goten/annotations/resource.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*SearchSpec)(nil),
		Field:         69013,
		Name:          "goten.annotations.search",
		Tag:           "bytes,69013,opt,name=search",
		Filename:      "goten/annotations/resource.proto",
	},
}

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional goten.annotations.ResourceSpec resource = 69010;
	E_Resource = &file_goten_annotations_resource_proto_extTypes[0]
	// optional goten.annotations.ResourceChange resource_change = 69011;
	E_ResourceChange = &file_goten_annotations_resource_proto_extTypes[1]
	// optional goten.annotations.ScopeAttributeSpec scope_attribute = 69012;
	E_ScopeAttribute = &file_goten_annotations_resource_proto_extTypes[2]
	// optional goten.annotations.SearchSpec search = 69013;
	E_Search = &file_goten_annotations_resource_proto_extTypes[3]
)

var File_goten_annotations_resource_proto protoreflect.FileDescriptor

var file_goten_annotations_resource_proto_rawDesc = []byte{
	0x0a, 0x20, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x11, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x6f, 0x74, 0x65, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2f, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xac,
	0x01, 0x0a, 0x08, 0x56, 0x69, 0x65, 0x77, 0x53, 0x70, 0x65, 0x63, 0x12, 0x25, 0x0a, 0x04, 0x76,
	0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x67, 0x6f, 0x74, 0x65,
	0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x04, 0x76, 0x69,
	0x65, 0x77, 0x12, 0x39, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x53, 0x70, 0x65, 0x63, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x1a, 0x3e, 0x0a,
	0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x7c, 0x0a,
	0x09, 0x50, 0x61, 0x67, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73,
	0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x6d, 0x61, 0x78, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x67, 0x0a, 0x12, 0x53,
	0x63, 0x6f, 0x70, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x75, 0x72, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x6c, 0x75, 0x72, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x64, 0x5f,
	0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69,
	0x64, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x22, 0xc1, 0x04, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x75, 0x72, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x75, 0x72, 0x61, 0x6c, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x64, 0x5f, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x64, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x5f, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x6e, 0x12, 0x69, 0x0a, 0x1a, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x6e, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x52, 0x17, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x12, 0x31, 0x0a, 0x05,
	0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f,
	0x74, 0x65, 0x6e, 0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x56, 0x69, 0x65, 0x77, 0x53, 0x70, 0x65, 0x63, 0x52, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12,
	0x36, 0x0a, 0x17, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6e, 0x64,
	0x61, 0x72, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x15, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72,
	0x64, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72,
	0x53, 0x70, 0x65, 0x63, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x61,
	0x73, 0x79, 0x6e, 0x63, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x16, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x64, 0x62,
	0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x14, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x62, 0x43, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x7c, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x53, 0x70, 0x65, 0x63, 0x12, 0x29, 0x0a, 0x10, 0x66, 0x75, 0x6c, 0x6c, 0x79, 0x5f,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0f, 0x66, 0x75, 0x6c, 0x6c, 0x79, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f,
	0x72, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f,
	0x72, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x2c, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x3a, 0x5e, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x92, 0x9b, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x74, 0x65,
	0x6e, 0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x3a, 0x6d, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x93, 0x9b, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x3a, 0x71, 0x0a, 0x0f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x94, 0x9b, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x0e, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x3a, 0x58, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x95, 0x9b, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x74, 0x65,
	0x6e, 0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x53, 0x70, 0x65, 0x63, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x42, 0x6a, 0x0a, 0x22, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x67, 0x6f, 0x74, 0x65,
	0x6e, 0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x12, 0x47, 0x6f, 0x74, 0x65, 0x6e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x01, 0x5a, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x77, 0x61,
	0x6e, 0x2f, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_goten_annotations_resource_proto_rawDescOnce sync.Once
	file_goten_annotations_resource_proto_rawDescData = file_goten_annotations_resource_proto_rawDesc
)

func file_goten_annotations_resource_proto_rawDescGZIP() []byte {
	file_goten_annotations_resource_proto_rawDescOnce.Do(func() {
		file_goten_annotations_resource_proto_rawDescData = protoimpl.X.CompressGZIP(file_goten_annotations_resource_proto_rawDescData)
	})
	return file_goten_annotations_resource_proto_rawDescData
}

var file_goten_annotations_resource_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_goten_annotations_resource_proto_goTypes = []interface{}{
	(*ViewSpec)(nil),                     // 0: goten.annotations.ViewSpec
	(*PagerSpec)(nil),                    // 1: goten.annotations.PagerSpec
	(*ScopeAttributeSpec)(nil),           // 2: goten.annotations.ScopeAttributeSpec
	(*ResourceSpec)(nil),                 // 3: goten.annotations.ResourceSpec
	(*SearchSpec)(nil),                   // 4: goten.annotations.SearchSpec
	(*ResourceChange)(nil),               // 5: goten.annotations.ResourceChange
	(*ViewSpec_Field)(nil),               // 6: goten.annotations.ViewSpec.Field
	(view.View)(0),                       // 7: goten.types.View
	(goten.OnReferencedObjectDeleted)(0), // 8: goten.annotations.OnReferencedObjectDeleted
	(*descriptorpb.MessageOptions)(nil),  // 9: google.protobuf.MessageOptions
}
var file_goten_annotations_resource_proto_depIdxs = []int32{
	7,  // 0: goten.annotations.ViewSpec.view:type_name -> goten.types.View
	6,  // 1: goten.annotations.ViewSpec.fields:type_name -> goten.annotations.ViewSpec.Field
	8,  // 2: goten.annotations.ResourceSpec.on_parent_deleted_behavior:type_name -> goten.annotations.OnReferencedObjectDeleted
	0,  // 3: goten.annotations.ResourceSpec.views:type_name -> goten.annotations.ViewSpec
	1,  // 4: goten.annotations.ResourceSpec.pager:type_name -> goten.annotations.PagerSpec
	9,  // 5: goten.annotations.resource:extendee -> google.protobuf.MessageOptions
	9,  // 6: goten.annotations.resource_change:extendee -> google.protobuf.MessageOptions
	9,  // 7: goten.annotations.scope_attribute:extendee -> google.protobuf.MessageOptions
	9,  // 8: goten.annotations.search:extendee -> google.protobuf.MessageOptions
	3,  // 9: goten.annotations.resource:type_name -> goten.annotations.ResourceSpec
	5,  // 10: goten.annotations.resource_change:type_name -> goten.annotations.ResourceChange
	2,  // 11: goten.annotations.scope_attribute:type_name -> goten.annotations.ScopeAttributeSpec
	4,  // 12: goten.annotations.search:type_name -> goten.annotations.SearchSpec
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	9,  // [9:13] is the sub-list for extension type_name
	5,  // [5:9] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_goten_annotations_resource_proto_init() }
func file_goten_annotations_resource_proto_init() {
	if File_goten_annotations_resource_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_goten_annotations_resource_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_resource_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagerSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_resource_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScopeAttributeSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_resource_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_resource_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_resource_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_resource_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewSpec_Field); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_goten_annotations_resource_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 4,
			NumServices:   0,
		},
		GoTypes:           file_goten_annotations_resource_proto_goTypes,
		DependencyIndexes: file_goten_annotations_resource_proto_depIdxs,
		MessageInfos:      file_goten_annotations_resource_proto_msgTypes,
		ExtensionInfos:    file_goten_annotations_resource_proto_extTypes,
	}.Build()
	File_goten_annotations_resource_proto = out.File
	file_goten_annotations_resource_proto_rawDesc = nil
	file_goten_annotations_resource_proto_goTypes = nil
	file_goten_annotations_resource_proto_depIdxs = nil
}
