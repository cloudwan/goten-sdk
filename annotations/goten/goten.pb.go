// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1-devel
// 	protoc        v4.25.2
// source: goten/annotations/goten.proto

package goten

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Defines behaviour of reference holder when referenced object has been deleted
type OnReferencedObjectDeleted int32

const (
	// Not allowed to be used.
	OnReferencedObjectDeleted_UNDEFINED OnReferencedObjectDeleted = 0
	// Blocks referenced object from being deleted
	OnReferencedObjectDeleted_BLOCK OnReferencedObjectDeleted = 1
	// Set reference to empty value if it belongs to same database, but in other cases it may be done
	// in asynchronous manner (for example, if referenced resource belongs to different service).
	OnReferencedObjectDeleted_UNSET OnReferencedObjectDeleted = 2
	// Deletion of referenced object causes reference owner to be also deleted if they belong to
	// same database, otherwise it may be done in asynchronous manner (for example, if referenced
	// resource belongs to different service).
	OnReferencedObjectDeleted_CASCADE_DELETE OnReferencedObjectDeleted = 3
	// Deletion of referenced object causes reference to be set to empty value.
	OnReferencedObjectDeleted_ASYNC_UNSET OnReferencedObjectDeleted = 4
	// Deletion of referenced object causes reference owner to be also deleted by garbage collector
	OnReferencedObjectDeleted_ASYNC_CASCADE_DELETE OnReferencedObjectDeleted = 5
	// Reference holder does nothing - reference is kept dangling.
	// This option allows custom code to be used for handling reference
	// owners.
	OnReferencedObjectDeleted_ALLOW_DANGLING OnReferencedObjectDeleted = 6
)

// Enum value maps for OnReferencedObjectDeleted.
var (
	OnReferencedObjectDeleted_name = map[int32]string{
		0: "UNDEFINED",
		1: "BLOCK",
		2: "UNSET",
		3: "CASCADE_DELETE",
		4: "ASYNC_UNSET",
		5: "ASYNC_CASCADE_DELETE",
		6: "ALLOW_DANGLING",
	}
	OnReferencedObjectDeleted_value = map[string]int32{
		"UNDEFINED":            0,
		"BLOCK":                1,
		"UNSET":                2,
		"CASCADE_DELETE":       3,
		"ASYNC_UNSET":          4,
		"ASYNC_CASCADE_DELETE": 5,
		"ALLOW_DANGLING":       6,
	}
)

func (x OnReferencedObjectDeleted) Enum() *OnReferencedObjectDeleted {
	p := new(OnReferencedObjectDeleted)
	*p = x
	return p
}

func (x OnReferencedObjectDeleted) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OnReferencedObjectDeleted) Descriptor() protoreflect.EnumDescriptor {
	return file_goten_annotations_goten_proto_enumTypes[0].Descriptor()
}

func (OnReferencedObjectDeleted) Type() protoreflect.EnumType {
	return &file_goten_annotations_goten_proto_enumTypes[0]
}

func (x OnReferencedObjectDeleted) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OnReferencedObjectDeleted.Descriptor instead.
func (OnReferencedObjectDeleted) EnumDescriptor() ([]byte, []int) {
	return file_goten_annotations_goten_proto_rawDescGZIP(), []int{0}
}

// Points to a rules used during merging of a map or repeated field.
// Repeated field, however, is not that different from a map at all. Reasons:
// * If a developer specifies unique identifier from fields taken from array
// item, then it is effectively a map (See Repeated:identifiers field in this
// MergeOpts annotation).
// * If repeated field is a list of primitive elements like strings, ints, or
// even list of simple objects like timestamps (repeated int array_of_ints,
// repeated string array_of_ints, repeated google.protobuf.Timestamp
// array_of_timestamps), then it can be considered as a map again: map<int,
// dummy> former_array_of_ints, map<string, dummy> former_array_of_strings
// etc. In those cases, array fields should be considered as both key and
// values! All FieldBehavior options below should be treated having above in
// mind. When you see "container" in any description below, it should be
// considered as a map or repeated.
type MergeOpts_FieldBehavior int32

const (
	// Fields by keys present in both containers are merged.
	// Fields only in a source container are added, fields only in a destination
	// container are retained.
	MergeOpts_DEFAULT MergeOpts_FieldBehavior = 0
	// Source container simply replaces destination without any merge operation.
	MergeOpts_REPLACE MergeOpts_FieldBehavior = 1
	// Fields by map keys present in both containers are merged.
	// Fields only in a source are added, fields only in a destination are
	// removed.
	MergeOpts_DISCARD_ONLY_IN_DEST MergeOpts_FieldBehavior = 2
	// Fields by map keys present in both objects are merged.
	// Fields only in a source map are ignored, fields only in a destination map
	// are retained.
	MergeOpts_DISCARD_ONLY_IN_SOURCE MergeOpts_FieldBehavior = 3
	// Fields present only in both source and destination containers are
	// retained and values are merged. Otherwise discarded.
	MergeOpts_OPERATION_AND MergeOpts_FieldBehavior = 4
	// Fields present in both source and destination containers are discarded.
	// Only unique keys present in one of the them are stored in final
	// destination object.
	MergeOpts_OPERATION_XOR MergeOpts_FieldBehavior = 5
	// This behavior indicates no merging operation, elements from source list
	// are simple appended. This rule cannot be used on repeated fields for
	// which we specified unique identifier AND maps. This rule is only
	// additional for repeated fields with primitive elements which can repeat
	// many times.
	MergeOpts_APPEND MergeOpts_FieldBehavior = 6
)

// Enum value maps for MergeOpts_FieldBehavior.
var (
	MergeOpts_FieldBehavior_name = map[int32]string{
		0: "DEFAULT",
		1: "REPLACE",
		2: "DISCARD_ONLY_IN_DEST",
		3: "DISCARD_ONLY_IN_SOURCE",
		4: "OPERATION_AND",
		5: "OPERATION_XOR",
		6: "APPEND",
	}
	MergeOpts_FieldBehavior_value = map[string]int32{
		"DEFAULT":                0,
		"REPLACE":                1,
		"DISCARD_ONLY_IN_DEST":   2,
		"DISCARD_ONLY_IN_SOURCE": 3,
		"OPERATION_AND":          4,
		"OPERATION_XOR":          5,
		"APPEND":                 6,
	}
)

func (x MergeOpts_FieldBehavior) Enum() *MergeOpts_FieldBehavior {
	p := new(MergeOpts_FieldBehavior)
	*p = x
	return p
}

func (x MergeOpts_FieldBehavior) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MergeOpts_FieldBehavior) Descriptor() protoreflect.EnumDescriptor {
	return file_goten_annotations_goten_proto_enumTypes[1].Descriptor()
}

func (MergeOpts_FieldBehavior) Type() protoreflect.EnumType {
	return &file_goten_annotations_goten_proto_enumTypes[1]
}

func (x MergeOpts_FieldBehavior) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MergeOpts_FieldBehavior.Descriptor instead.
func (MergeOpts_FieldBehavior) EnumDescriptor() ([]byte, []int) {
	return file_goten_annotations_goten_proto_rawDescGZIP(), []int{2, 0}
}

// Tells how repeated field should be sorted after merge.
type MergeOpts_Repeated_SortingOrder int32

const (
	// No sorting
	MergeOpts_Repeated_NO_SORTING MergeOpts_Repeated_SortingOrder = 0
	// Ascending order.
	//   - For primitive fields, values are sorted
	//     ascending by their value
	//   - For objects with identifiers, values
	//     are sorted ascending by their identifiers
	//     alphabetically.
	//   - Invalid (goten will raise an error) for
	//     objects without specified identifiers.
	MergeOpts_Repeated_ASCENDING MergeOpts_Repeated_SortingOrder = 1
	// Descending order.
	//   - For primitive fields, values are sorted
	//     descending by their value
	//   - For objects with identifiers, values
	//     are sorted descending by their identifiers
	//     alphabetically.
	//   - Invalid (goten will raise an error) for
	//     objects without specified identifiers.
	MergeOpts_Repeated_DESCENDING MergeOpts_Repeated_SortingOrder = 2
)

// Enum value maps for MergeOpts_Repeated_SortingOrder.
var (
	MergeOpts_Repeated_SortingOrder_name = map[int32]string{
		0: "NO_SORTING",
		1: "ASCENDING",
		2: "DESCENDING",
	}
	MergeOpts_Repeated_SortingOrder_value = map[string]int32{
		"NO_SORTING": 0,
		"ASCENDING":  1,
		"DESCENDING": 2,
	}
)

func (x MergeOpts_Repeated_SortingOrder) Enum() *MergeOpts_Repeated_SortingOrder {
	p := new(MergeOpts_Repeated_SortingOrder)
	*p = x
	return p
}

func (x MergeOpts_Repeated_SortingOrder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MergeOpts_Repeated_SortingOrder) Descriptor() protoreflect.EnumDescriptor {
	return file_goten_annotations_goten_proto_enumTypes[2].Descriptor()
}

func (MergeOpts_Repeated_SortingOrder) Type() protoreflect.EnumType {
	return &file_goten_annotations_goten_proto_enumTypes[2]
}

func (x MergeOpts_Repeated_SortingOrder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MergeOpts_Repeated_SortingOrder.Descriptor instead.
func (MergeOpts_Repeated_SortingOrder) EnumDescriptor() ([]byte, []int) {
	return file_goten_annotations_goten_proto_rawDescGZIP(), []int{2, 0, 0}
}

// Go package configuration
type GoPackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the package
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Path where generated files are stored
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *GoPackage) Reset() {
	*x = GoPackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_goten_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoPackage) ProtoMessage() {}

func (x *GoPackage) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_goten_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoPackage.ProtoReflect.Descriptor instead.
func (*GoPackage) Descriptor() ([]byte, []int) {
	return file_goten_annotations_goten_proto_rawDescGZIP(), []int{0}
}

func (x *GoPackage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GoPackage) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type FieldType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*FieldType_Name
	//	*FieldType_Reference
	//	*FieldType_Filter
	//	*FieldType_PagerCursor
	//	*FieldType_OrderBy
	//	*FieldType_FieldMask
	//	*FieldType_ParentName
	//	*FieldType_ParentReference
	Type isFieldType_Type `protobuf_oneof:"type"`
}

func (x *FieldType) Reset() {
	*x = FieldType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_goten_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldType) ProtoMessage() {}

func (x *FieldType) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_goten_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldType.ProtoReflect.Descriptor instead.
func (*FieldType) Descriptor() ([]byte, []int) {
	return file_goten_annotations_goten_proto_rawDescGZIP(), []int{1}
}

func (m *FieldType) GetType() isFieldType_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *FieldType) GetName() *FieldType_NameType {
	if x, ok := x.GetType().(*FieldType_Name); ok {
		return x.Name
	}
	return nil
}

func (x *FieldType) GetReference() *FieldType_ReferenceType {
	if x, ok := x.GetType().(*FieldType_Reference); ok {
		return x.Reference
	}
	return nil
}

func (x *FieldType) GetFilter() *FieldType_FilterType {
	if x, ok := x.GetType().(*FieldType_Filter); ok {
		return x.Filter
	}
	return nil
}

func (x *FieldType) GetPagerCursor() *FieldType_PagerCursorType {
	if x, ok := x.GetType().(*FieldType_PagerCursor); ok {
		return x.PagerCursor
	}
	return nil
}

func (x *FieldType) GetOrderBy() *FieldType_OrderByType {
	if x, ok := x.GetType().(*FieldType_OrderBy); ok {
		return x.OrderBy
	}
	return nil
}

func (x *FieldType) GetFieldMask() *FieldType_FieldMaskType {
	if x, ok := x.GetType().(*FieldType_FieldMask); ok {
		return x.FieldMask
	}
	return nil
}

func (x *FieldType) GetParentName() *FieldType_ParentNameType {
	if x, ok := x.GetType().(*FieldType_ParentName); ok {
		return x.ParentName
	}
	return nil
}

func (x *FieldType) GetParentReference() *FieldType_ParentReferenceType {
	if x, ok := x.GetType().(*FieldType_ParentReference); ok {
		return x.ParentReference
	}
	return nil
}

type isFieldType_Type interface {
	isFieldType_Type()
}

type FieldType_Name struct {
	Name *FieldType_NameType `protobuf:"bytes,1,opt,name=name,proto3,oneof"`
}

type FieldType_Reference struct {
	Reference *FieldType_ReferenceType `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

type FieldType_Filter struct {
	Filter *FieldType_FilterType `protobuf:"bytes,3,opt,name=filter,proto3,oneof"`
}

type FieldType_PagerCursor struct {
	PagerCursor *FieldType_PagerCursorType `protobuf:"bytes,4,opt,name=pager_cursor,json=pagerCursor,proto3,oneof"`
}

type FieldType_OrderBy struct {
	OrderBy *FieldType_OrderByType `protobuf:"bytes,5,opt,name=order_by,json=orderBy,proto3,oneof"`
}

type FieldType_FieldMask struct {
	FieldMask *FieldType_FieldMaskType `protobuf:"bytes,6,opt,name=field_mask,json=fieldMask,proto3,oneof"`
}

type FieldType_ParentName struct {
	ParentName *FieldType_ParentNameType `protobuf:"bytes,7,opt,name=parent_name,json=parentName,proto3,oneof"`
}

type FieldType_ParentReference struct {
	ParentReference *FieldType_ParentReferenceType `protobuf:"bytes,8,opt,name=parent_reference,json=parentReference,proto3,oneof"`
}

func (*FieldType_Name) isFieldType_Type() {}

func (*FieldType_Reference) isFieldType_Type() {}

func (*FieldType_Filter) isFieldType_Type() {}

func (*FieldType_PagerCursor) isFieldType_Type() {}

func (*FieldType_OrderBy) isFieldType_Type() {}

func (*FieldType_FieldMask) isFieldType_Type() {}

func (*FieldType_ParentName) isFieldType_Type() {}

func (*FieldType_ParentReference) isFieldType_Type() {}

// Describes how goten should merge given field
// within a containing proto message. Merge is an
// operation, where an "original object" is a message
// to which we merge to, "source object" is a message
// we merge from. In result, original object is modified
// and contains all data from source object while
// source object is left untouched.
type MergeOpts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Opts:
	//
	//	*MergeOpts_Repeated_
	//	*MergeOpts_Map_
	Opts isMergeOpts_Opts `protobuf_oneof:"opts"`
}

func (x *MergeOpts) Reset() {
	*x = MergeOpts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_goten_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MergeOpts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeOpts) ProtoMessage() {}

func (x *MergeOpts) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_goten_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeOpts.ProtoReflect.Descriptor instead.
func (*MergeOpts) Descriptor() ([]byte, []int) {
	return file_goten_annotations_goten_proto_rawDescGZIP(), []int{2}
}

func (m *MergeOpts) GetOpts() isMergeOpts_Opts {
	if m != nil {
		return m.Opts
	}
	return nil
}

func (x *MergeOpts) GetRepeated() *MergeOpts_Repeated {
	if x, ok := x.GetOpts().(*MergeOpts_Repeated_); ok {
		return x.Repeated
	}
	return nil
}

func (x *MergeOpts) GetMap() *MergeOpts_Map {
	if x, ok := x.GetOpts().(*MergeOpts_Map_); ok {
		return x.Map
	}
	return nil
}

type isMergeOpts_Opts interface {
	isMergeOpts_Opts()
}

type MergeOpts_Repeated_ struct {
	// Settings applicable for repeated fields
	Repeated *MergeOpts_Repeated `protobuf:"bytes,1,opt,name=repeated,proto3,oneof"`
}

type MergeOpts_Map_ struct {
	// Settings applicable for map fields
	Map *MergeOpts_Map `protobuf:"bytes,2,opt,name=map,proto3,oneof"`
}

func (*MergeOpts_Repeated_) isMergeOpts_Opts() {}

func (*MergeOpts_Map_) isMergeOpts_Opts() {}

// Name type pointing to resource.
// This type can only be used for fields in objects defined in proto package
// containing Goten service definition (ServicePackage - goten.annotations.service_pkg).
type FieldType_NameType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// resource name.
	// It can have two possible format: either short version like "Shelf", or fully qualified
	// like library.goten.com/Shelf - note the first part is not proto package, but service domain.
	Resource string `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *FieldType_NameType) Reset() {
	*x = FieldType_NameType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_goten_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldType_NameType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldType_NameType) ProtoMessage() {}

func (x *FieldType_NameType) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_goten_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldType_NameType.ProtoReflect.Descriptor instead.
func (*FieldType_NameType) Descriptor() ([]byte, []int) {
	return file_goten_annotations_goten_proto_rawDescGZIP(), []int{1, 0}
}

func (x *FieldType_NameType) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

// Reference to another resource.
// This type can only be used for fields in objects defined in proto package
// containing Goten service definition (ServicePackage - goten.annotations.service_pkg).
// Unlike name type, Go object generated for reference also has reference to potentially
// resolved resource itself. This type should be used inside resources objects - reference
// types are picked by schema engine provided by Goten.
type FieldType_ReferenceType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// resource this string is referring to.
	// It can have two possible format: either short version like "Shelf", or fully qualified
	// like library.goten.com/Shelf - note the first part is not proto package, but service domain.
	Resource string `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	// Defined behaviour of the referencing resource if referenced is deleted.
	TargetDeleteBehavior OnReferencedObjectDeleted `protobuf:"varint,2,opt,name=target_delete_behavior,json=targetDeleteBehavior,proto3,enum=goten.annotations.OnReferencedObjectDeleted" json:"target_delete_behavior,omitempty"`
}

func (x *FieldType_ReferenceType) Reset() {
	*x = FieldType_ReferenceType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_goten_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldType_ReferenceType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldType_ReferenceType) ProtoMessage() {}

func (x *FieldType_ReferenceType) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_goten_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldType_ReferenceType.ProtoReflect.Descriptor instead.
func (*FieldType_ReferenceType) Descriptor() ([]byte, []int) {
	return file_goten_annotations_goten_proto_rawDescGZIP(), []int{1, 1}
}

func (x *FieldType_ReferenceType) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *FieldType_ReferenceType) GetTargetDeleteBehavior() OnReferencedObjectDeleted {
	if x != nil {
		return x.TargetDeleteBehavior
	}
	return OnReferencedObjectDeleted_UNDEFINED
}

// Filter to another resource.
// This type can only be used for fields in objects defined in proto package
// containing Goten service definition (ServicePackage - goten.annotations.service_pkg).
type FieldType_FilterType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// resource this string is referring to.
	// It can have two possible format: either short version like "Shelf", or fully qualified
	// like library.goten.com/Shelf - note the first part is not proto package, but service domain.
	Resource string `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *FieldType_FilterType) Reset() {
	*x = FieldType_FilterType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_goten_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldType_FilterType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldType_FilterType) ProtoMessage() {}

func (x *FieldType_FilterType) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_goten_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldType_FilterType.ProtoReflect.Descriptor instead.
func (*FieldType_FilterType) Descriptor() ([]byte, []int) {
	return file_goten_annotations_goten_proto_rawDescGZIP(), []int{1, 2}
}

func (x *FieldType_FilterType) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

// PagerCursor for navigating paginated query results.
// This type can only be used for fields in objects defined in proto package
// containing Goten service definition (ServicePackage - goten.annotations.service_pkg).
type FieldType_PagerCursorType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// resource whose collections this cursor is able to navigate.
	// It can have two possible format: either short version like "Shelf", or fully qualified
	// like library.goten.com/Shelf - note the first part is not proto package, but service domain.
	Resource string `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *FieldType_PagerCursorType) Reset() {
	*x = FieldType_PagerCursorType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_goten_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldType_PagerCursorType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldType_PagerCursorType) ProtoMessage() {}

func (x *FieldType_PagerCursorType) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_goten_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldType_PagerCursorType.ProtoReflect.Descriptor instead.
func (*FieldType_PagerCursorType) Descriptor() ([]byte, []int) {
	return file_goten_annotations_goten_proto_rawDescGZIP(), []int{1, 3}
}

func (x *FieldType_PagerCursorType) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

// OrderBy defines an ordering on resources fields.
// This type can only be used for fields in objects defined in proto package
// containing Goten service definition (ServicePackage - goten.annotations.service_pkg).
type FieldType_OrderByType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// resource on whose fields this OrderBy is able to define ordering.
	// It can have two possible format: either short version like "Shelf", or fully qualified
	// like library.goten.com/Shelf - note the first part is not proto package, but service domain.
	Resource string `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *FieldType_OrderByType) Reset() {
	*x = FieldType_OrderByType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_goten_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldType_OrderByType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldType_OrderByType) ProtoMessage() {}

func (x *FieldType_OrderByType) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_goten_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldType_OrderByType.ProtoReflect.Descriptor instead.
func (*FieldType_OrderByType) Descriptor() ([]byte, []int) {
	return file_goten_annotations_goten_proto_rawDescGZIP(), []int{1, 4}
}

func (x *FieldType_OrderByType) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

// FieldMask for specifying a subset of fields to be fetched/updated.
// This type can only be used for fields in objects defined in proto package
// containing Goten service definition (ServicePackage - goten.annotations.service_pkg).
type FieldType_FieldMaskType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// resource whose fields this FieldMask refers to.
	// It can have two possible format: either short version like "Shelf", or fully qualified
	// like library.goten.com/Shelf - note the first part is not proto package, but service domain.
	Resource string `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *FieldType_FieldMaskType) Reset() {
	*x = FieldType_FieldMaskType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_goten_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldType_FieldMaskType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldType_FieldMaskType) ProtoMessage() {}

func (x *FieldType_FieldMaskType) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_goten_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldType_FieldMaskType.ProtoReflect.Descriptor instead.
func (*FieldType_FieldMaskType) Descriptor() ([]byte, []int) {
	return file_goten_annotations_goten_proto_rawDescGZIP(), []int{1, 5}
}

func (x *FieldType_FieldMaskType) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

// ParentName points to parent name of given resource - in case of multiple possible parents
// it will contain internally oneof of all possible combinations.
// This type can only be used for fields in objects defined in proto package
// containing Goten service definition (ServicePackage - goten.annotations.service_pkg).
type FieldType_ParentNameType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// resource whose parent this field points to.
	// It can only have short format - like "Shelf". It is not allowed to define parent to resource
	// outside current service package.
	Resource string `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *FieldType_ParentNameType) Reset() {
	*x = FieldType_ParentNameType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_goten_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldType_ParentNameType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldType_ParentNameType) ProtoMessage() {}

func (x *FieldType_ParentNameType) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_goten_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldType_ParentNameType.ProtoReflect.Descriptor instead.
func (*FieldType_ParentNameType) Descriptor() ([]byte, []int) {
	return file_goten_annotations_goten_proto_rawDescGZIP(), []int{1, 6}
}

func (x *FieldType_ParentNameType) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

// ParentReferenceType points to parent name of given resource - in case of multiple possible parents
// it will contain internally oneof of all possible combinations.
// Unlike name type, generated Go version will also contain reference to resolved object.
type FieldType_ParentReferenceType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// resource whose parent this field points to.
	// It can only have short format - like "Shelf". It is not allowed to define parent to resource
	// outside current service package.
	Resource string `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *FieldType_ParentReferenceType) Reset() {
	*x = FieldType_ParentReferenceType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_goten_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldType_ParentReferenceType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldType_ParentReferenceType) ProtoMessage() {}

func (x *FieldType_ParentReferenceType) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_goten_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldType_ParentReferenceType.ProtoReflect.Descriptor instead.
func (*FieldType_ParentReferenceType) Descriptor() ([]byte, []int) {
	return file_goten_annotations_goten_proto_rawDescGZIP(), []int{1, 7}
}

func (x *FieldType_ParentReferenceType) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

// Merge rules applicable to repeated fields.
// Repeated field can be classified as:
//   - Primitive (string, integer, float, reference...)
//   - Object (proto message) where each item has unique
//     identifier (repeated Container, where Container has
//     "string name" field inside). For short, we can call
//     this "identified object".
//   - Object (proto message) where items dont have
//     unique identifiers. For short, we can call this
//     "plain object".
type MergeOpts_Repeated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifiers of an array item.
	// For example, for field "repeated Container containers"
	// identifiers could be equal to ["name"]. Such an array
	// would be then treated like map<string, Container>.
	// Option valid only if array item is a message, not primitive.
	Identifiers []string `protobuf:"bytes,1,rep,name=identifiers,proto3" json:"identifiers,omitempty"`
	// Instructs goten how repeated field should be merged.
	Behavior MergeOpts_FieldBehavior `protobuf:"varint,2,opt,name=behavior,proto3,enum=goten.annotations.MergeOpts_FieldBehavior" json:"behavior,omitempty"`
	// Instructs whether repeated field should be sorted after
	// merge and how.
	Sorting MergeOpts_Repeated_SortingOrder `protobuf:"varint,3,opt,name=sorting,proto3,enum=goten.annotations.MergeOpts_Repeated_SortingOrder" json:"sorting,omitempty"`
}

func (x *MergeOpts_Repeated) Reset() {
	*x = MergeOpts_Repeated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_goten_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MergeOpts_Repeated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeOpts_Repeated) ProtoMessage() {}

func (x *MergeOpts_Repeated) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_goten_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeOpts_Repeated.ProtoReflect.Descriptor instead.
func (*MergeOpts_Repeated) Descriptor() ([]byte, []int) {
	return file_goten_annotations_goten_proto_rawDescGZIP(), []int{2, 0}
}

func (x *MergeOpts_Repeated) GetIdentifiers() []string {
	if x != nil {
		return x.Identifiers
	}
	return nil
}

func (x *MergeOpts_Repeated) GetBehavior() MergeOpts_FieldBehavior {
	if x != nil {
		return x.Behavior
	}
	return MergeOpts_DEFAULT
}

func (x *MergeOpts_Repeated) GetSorting() MergeOpts_Repeated_SortingOrder {
	if x != nil {
		return x.Sorting
	}
	return MergeOpts_Repeated_NO_SORTING
}

// Merge rules applicable for map fields.
type MergeOpts_Map struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Instructs goten how map field should be merged.
	Behavior MergeOpts_FieldBehavior `protobuf:"varint,1,opt,name=behavior,proto3,enum=goten.annotations.MergeOpts_FieldBehavior" json:"behavior,omitempty"`
}

func (x *MergeOpts_Map) Reset() {
	*x = MergeOpts_Map{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goten_annotations_goten_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MergeOpts_Map) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeOpts_Map) ProtoMessage() {}

func (x *MergeOpts_Map) ProtoReflect() protoreflect.Message {
	mi := &file_goten_annotations_goten_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeOpts_Map.ProtoReflect.Descriptor instead.
func (*MergeOpts_Map) Descriptor() ([]byte, []int) {
	return file_goten_annotations_goten_proto_rawDescGZIP(), []int{2, 1}
}

func (x *MergeOpts_Map) GetBehavior() MergeOpts_FieldBehavior {
	if x != nil {
		return x.Behavior
	}
	return MergeOpts_DEFAULT
}

var file_goten_annotations_goten_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FileOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         69101,
		Name:          "goten.annotations.object_ext_gen_all",
		Tag:           "varint,69101,opt,name=object_ext_gen_all",
		Filename:      "goten/annotations/goten.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         69101,
		Name:          "goten.annotations.object_ext_gen",
		Tag:           "varint,69101,opt,name=object_ext_gen",
		Filename:      "goten/annotations/goten.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*FieldType)(nil),
		Field:         69030,
		Name:          "goten.annotations.type",
		Tag:           "bytes,69030,opt,name=type",
		Filename:      "goten/annotations/goten.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         69021,
		Name:          "goten.annotations.primary_id",
		Tag:           "varint,69021,opt,name=primary_id",
		Filename:      "goten/annotations/goten.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         69022,
		Name:          "goten.annotations.output_only",
		Tag:           "varint,69022,opt,name=output_only",
		Filename:      "goten/annotations/goten.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*MergeOpts)(nil),
		Field:         69101,
		Name:          "goten.annotations.merge",
		Tag:           "bytes,69101,opt,name=merge",
		Filename:      "goten/annotations/goten.proto",
	},
}

// Extension fields to descriptorpb.FileOptions.
var (
	// Affects default behavior of object_ext_gen flag for every message in a
	// File.
	//
	// optional bool object_ext_gen_all = 69101;
	E_ObjectExtGenAll = &file_goten_annotations_goten_proto_extTypes[0]
)

// Extension fields to descriptorpb.MessageOptions.
var (
	// Indicates if a Goten-owned proto message should be extended
	// with extra functionalities (offered by protoc-goten-gen-object)
	// plugin like strongly typed field paths & masks, customized merging,
	// field mask projections.
	//
	// optional bool object_ext_gen = 69101;
	E_ObjectExtGen = &file_goten_annotations_goten_proto_extTypes[1]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional goten.annotations.FieldType type = 69030;
	E_Type = &file_goten_annotations_goten_proto_extTypes[2]
	// optional bool primary_id = 69021;
	E_PrimaryId = &file_goten_annotations_goten_proto_extTypes[3]
	// when output only is set, all input (create/update) requests for this field
	// *must* be ignored:
	// https://cloud.google.com/apis/design/design_patterns#output_fields
	// When Field is embedded, property is propagated to child messages.
	// First occurrence of true value cuts-off whole field path subtree.
	//
	// optional bool output_only = 69022;
	E_OutputOnly = &file_goten_annotations_goten_proto_extTypes[4]
	// Describes what code should be generated for merging
	// operation for a given field.
	//
	// optional goten.annotations.MergeOpts merge = 69101;
	E_Merge = &file_goten_annotations_goten_proto_extTypes[5]
)

var File_goten_annotations_goten_proto protoreflect.FileDescriptor

var file_goten_annotations_goten_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x11, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x33, 0x0a, 0x09, 0x47, 0x6f, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0xc1, 0x08, 0x0a, 0x09, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x41, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x51, 0x0a, 0x0c, 0x70, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x63, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x6f, 0x74, 0x65,
	0x6e, 0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x43, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x72,
	0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x45, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e,
	0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x48, 0x00, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x4b, 0x0a,
	0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52,
	0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x4e, 0x0a, 0x0b, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0a,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x5d, 0x0a, 0x10, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x1a, 0x26, 0x0a, 0x08, 0x4e, 0x61, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x1a, 0x8f, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x62, 0x0a, 0x16, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2c, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x64,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x14, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x1a, 0x28, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0x2d, 0x0a,
	0x0f, 0x50, 0x61, 0x67, 0x65, 0x72, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0x29, 0x0a, 0x0b,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0x2b, 0x0a, 0x0d, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4d, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x1a, 0x2c, 0x0a, 0x0e, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x1a, 0x31, 0x0a, 0x13, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xf5, 0x04,
	0x0a, 0x09, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x73, 0x12, 0x43, 0x0a, 0x08, 0x72,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x34, 0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x73, 0x2e, 0x4d, 0x61, 0x70, 0x48,
	0x00, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x1a, 0x81, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x46, 0x0a, 0x08, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x65, 0x72, 0x67,
	0x65, 0x4f, 0x70, 0x74, 0x73, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x42, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x52, 0x08, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x12, 0x4c, 0x0a,
	0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32,
	0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x3d, 0x0a, 0x0c, 0x53,
	0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x0a, 0x4e,
	0x4f, 0x5f, 0x53, 0x4f, 0x52, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x41,
	0x53, 0x43, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x45,
	0x53, 0x43, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x1a, 0x4d, 0x0a, 0x03, 0x4d, 0x61,
	0x70, 0x12, 0x46, 0x0a, 0x08, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x4f, 0x70, 0x74,
	0x73, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x52,
	0x08, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x22, 0x91, 0x01, 0x0a, 0x0d, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x12, 0x0b, 0x0a, 0x07, 0x44,
	0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x50, 0x4c,
	0x41, 0x43, 0x45, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x49, 0x53, 0x43, 0x41, 0x52, 0x44,
	0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x5f, 0x49, 0x4e, 0x5f, 0x44, 0x45, 0x53, 0x54, 0x10, 0x02, 0x12,
	0x1a, 0x0a, 0x16, 0x44, 0x49, 0x53, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x5f,
	0x49, 0x4e, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x4f,
	0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x4e, 0x44, 0x10, 0x04, 0x12, 0x11,
	0x0a, 0x0d, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x58, 0x4f, 0x52, 0x10,
	0x05, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x50, 0x50, 0x45, 0x4e, 0x44, 0x10, 0x06, 0x42, 0x06, 0x0a,
	0x04, 0x6f, 0x70, 0x74, 0x73, 0x2a, 0x93, 0x01, 0x0a, 0x19, 0x4f, 0x6e, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x01, 0x12, 0x09, 0x0a,
	0x05, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x41, 0x53, 0x43,
	0x41, 0x44, 0x45, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b,
	0x41, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x04, 0x12, 0x18, 0x0a,
	0x14, 0x41, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x43, 0x41, 0x53, 0x43, 0x41, 0x44, 0x45, 0x5f, 0x44,
	0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x4c, 0x4c, 0x4f, 0x57,
	0x5f, 0x44, 0x41, 0x4e, 0x47, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x06, 0x3a, 0x4b, 0x0a, 0x12, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x65, 0x78, 0x74, 0x5f, 0x67, 0x65, 0x6e, 0x5f, 0x61, 0x6c,
	0x6c, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0xed, 0x9b, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x45,
	0x78, 0x74, 0x47, 0x65, 0x6e, 0x41, 0x6c, 0x6c, 0x3a, 0x47, 0x0a, 0x0e, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x65, 0x78, 0x74, 0x5f, 0x67, 0x65, 0x6e, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xed, 0x9b, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x78, 0x74, 0x47, 0x65,
	0x6e, 0x3a, 0x51, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xa6, 0x9b, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x3a, 0x3e, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f,
	0x69, 0x64, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x9d, 0x9b, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x70, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x49, 0x64, 0x3a, 0x40, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x6f,
	0x6e, 0x6c, 0x79, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x9e, 0x9b, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x4f, 0x6e, 0x6c, 0x79, 0x3a, 0x53, 0x0a, 0x05, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x12,
	0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xed,
	0x9b, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65,
	0x4f, 0x70, 0x74, 0x73, 0x52, 0x05, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x42, 0x4f, 0x0a, 0x1e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2e, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x01, 0x5a,
	0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x77, 0x61, 0x6e, 0x2f, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_goten_annotations_goten_proto_rawDescOnce sync.Once
	file_goten_annotations_goten_proto_rawDescData = file_goten_annotations_goten_proto_rawDesc
)

func file_goten_annotations_goten_proto_rawDescGZIP() []byte {
	file_goten_annotations_goten_proto_rawDescOnce.Do(func() {
		file_goten_annotations_goten_proto_rawDescData = protoimpl.X.CompressGZIP(file_goten_annotations_goten_proto_rawDescData)
	})
	return file_goten_annotations_goten_proto_rawDescData
}

var file_goten_annotations_goten_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_goten_annotations_goten_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_goten_annotations_goten_proto_goTypes = []any{
	(OnReferencedObjectDeleted)(0),        // 0: goten.annotations.OnReferencedObjectDeleted
	(MergeOpts_FieldBehavior)(0),          // 1: goten.annotations.MergeOpts.FieldBehavior
	(MergeOpts_Repeated_SortingOrder)(0),  // 2: goten.annotations.MergeOpts.Repeated.SortingOrder
	(*GoPackage)(nil),                     // 3: goten.annotations.GoPackage
	(*FieldType)(nil),                     // 4: goten.annotations.FieldType
	(*MergeOpts)(nil),                     // 5: goten.annotations.MergeOpts
	(*FieldType_NameType)(nil),            // 6: goten.annotations.FieldType.NameType
	(*FieldType_ReferenceType)(nil),       // 7: goten.annotations.FieldType.ReferenceType
	(*FieldType_FilterType)(nil),          // 8: goten.annotations.FieldType.FilterType
	(*FieldType_PagerCursorType)(nil),     // 9: goten.annotations.FieldType.PagerCursorType
	(*FieldType_OrderByType)(nil),         // 10: goten.annotations.FieldType.OrderByType
	(*FieldType_FieldMaskType)(nil),       // 11: goten.annotations.FieldType.FieldMaskType
	(*FieldType_ParentNameType)(nil),      // 12: goten.annotations.FieldType.ParentNameType
	(*FieldType_ParentReferenceType)(nil), // 13: goten.annotations.FieldType.ParentReferenceType
	(*MergeOpts_Repeated)(nil),            // 14: goten.annotations.MergeOpts.Repeated
	(*MergeOpts_Map)(nil),                 // 15: goten.annotations.MergeOpts.Map
	(*descriptorpb.FileOptions)(nil),      // 16: google.protobuf.FileOptions
	(*descriptorpb.MessageOptions)(nil),   // 17: google.protobuf.MessageOptions
	(*descriptorpb.FieldOptions)(nil),     // 18: google.protobuf.FieldOptions
}
var file_goten_annotations_goten_proto_depIdxs = []int32{
	6,  // 0: goten.annotations.FieldType.name:type_name -> goten.annotations.FieldType.NameType
	7,  // 1: goten.annotations.FieldType.reference:type_name -> goten.annotations.FieldType.ReferenceType
	8,  // 2: goten.annotations.FieldType.filter:type_name -> goten.annotations.FieldType.FilterType
	9,  // 3: goten.annotations.FieldType.pager_cursor:type_name -> goten.annotations.FieldType.PagerCursorType
	10, // 4: goten.annotations.FieldType.order_by:type_name -> goten.annotations.FieldType.OrderByType
	11, // 5: goten.annotations.FieldType.field_mask:type_name -> goten.annotations.FieldType.FieldMaskType
	12, // 6: goten.annotations.FieldType.parent_name:type_name -> goten.annotations.FieldType.ParentNameType
	13, // 7: goten.annotations.FieldType.parent_reference:type_name -> goten.annotations.FieldType.ParentReferenceType
	14, // 8: goten.annotations.MergeOpts.repeated:type_name -> goten.annotations.MergeOpts.Repeated
	15, // 9: goten.annotations.MergeOpts.map:type_name -> goten.annotations.MergeOpts.Map
	0,  // 10: goten.annotations.FieldType.ReferenceType.target_delete_behavior:type_name -> goten.annotations.OnReferencedObjectDeleted
	1,  // 11: goten.annotations.MergeOpts.Repeated.behavior:type_name -> goten.annotations.MergeOpts.FieldBehavior
	2,  // 12: goten.annotations.MergeOpts.Repeated.sorting:type_name -> goten.annotations.MergeOpts.Repeated.SortingOrder
	1,  // 13: goten.annotations.MergeOpts.Map.behavior:type_name -> goten.annotations.MergeOpts.FieldBehavior
	16, // 14: goten.annotations.object_ext_gen_all:extendee -> google.protobuf.FileOptions
	17, // 15: goten.annotations.object_ext_gen:extendee -> google.protobuf.MessageOptions
	18, // 16: goten.annotations.type:extendee -> google.protobuf.FieldOptions
	18, // 17: goten.annotations.primary_id:extendee -> google.protobuf.FieldOptions
	18, // 18: goten.annotations.output_only:extendee -> google.protobuf.FieldOptions
	18, // 19: goten.annotations.merge:extendee -> google.protobuf.FieldOptions
	4,  // 20: goten.annotations.type:type_name -> goten.annotations.FieldType
	5,  // 21: goten.annotations.merge:type_name -> goten.annotations.MergeOpts
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	20, // [20:22] is the sub-list for extension type_name
	14, // [14:20] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_goten_annotations_goten_proto_init() }
func file_goten_annotations_goten_proto_init() {
	if File_goten_annotations_goten_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_goten_annotations_goten_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GoPackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_goten_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*FieldType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_goten_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*MergeOpts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_goten_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*FieldType_NameType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_goten_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*FieldType_ReferenceType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_goten_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*FieldType_FilterType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_goten_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*FieldType_PagerCursorType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_goten_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*FieldType_OrderByType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_goten_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*FieldType_FieldMaskType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_goten_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*FieldType_ParentNameType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_goten_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*FieldType_ParentReferenceType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_goten_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*MergeOpts_Repeated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goten_annotations_goten_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*MergeOpts_Map); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_goten_annotations_goten_proto_msgTypes[1].OneofWrappers = []any{
		(*FieldType_Name)(nil),
		(*FieldType_Reference)(nil),
		(*FieldType_Filter)(nil),
		(*FieldType_PagerCursor)(nil),
		(*FieldType_OrderBy)(nil),
		(*FieldType_FieldMask)(nil),
		(*FieldType_ParentName)(nil),
		(*FieldType_ParentReference)(nil),
	}
	file_goten_annotations_goten_proto_msgTypes[2].OneofWrappers = []any{
		(*MergeOpts_Repeated_)(nil),
		(*MergeOpts_Map_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_goten_annotations_goten_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   13,
			NumExtensions: 6,
			NumServices:   0,
		},
		GoTypes:           file_goten_annotations_goten_proto_goTypes,
		DependencyIndexes: file_goten_annotations_goten_proto_depIdxs,
		EnumInfos:         file_goten_annotations_goten_proto_enumTypes,
		MessageInfos:      file_goten_annotations_goten_proto_msgTypes,
		ExtensionInfos:    file_goten_annotations_goten_proto_extTypes,
	}.Build()
	File_goten_annotations_goten_proto = out.File
	file_goten_annotations_goten_proto_rawDesc = nil
	file_goten_annotations_goten_proto_goTypes = nil
	file_goten_annotations_goten_proto_depIdxs = nil
}
